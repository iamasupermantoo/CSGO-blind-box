{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\src\\layouts\\components\\navbar\\components\\NotificationDropDown.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\src\\layouts\\components\\navbar\\components\\NotificationDropDown.vue","mtime":1620826038000},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\babel-loader\\lib\\index.js","mtime":1663908471338},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\vue-loader\\lib\\index.js","mtime":1664268237964}],"contextDependencies":[],"result":["\r\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\r\n\r\nexport default {\r\n  components: {\r\n    VuePerfectScrollbar\r\n  },\r\n  data () {\r\n    return {\r\n      unreadNotifications: [\r\n        {\r\n          index    : 0,\r\n          title    : 'New Message',\r\n          msg      : 'Are your going to meet me tonight?',\r\n          icon     : 'MessageSquareIcon',\r\n          time     : this.randomDate({sec: 10}),\r\n          category : 'primary'\r\n        },\r\n        { index    : 1,\r\n          title    : 'New Order Recieved',\r\n          msg      : 'You got new order of goods.',\r\n          icon     : 'PackageIcon',\r\n          time     : this.randomDate({sec: 40}),\r\n          category : 'success'\r\n        },\r\n        { index    : 2,\r\n          title    : 'Server Limit Reached!',\r\n          msg      : 'Server have 99% CPU usage.',\r\n          icon     : 'AlertOctagonIcon',\r\n          time     : this.randomDate({min: 1}),\r\n          category : 'danger'\r\n        },\r\n        { index    : 3,\r\n          title    : 'New Mail From Peter',\r\n          msg      : 'Cake sesame snaps cupcake',\r\n          icon     : 'MailIcon',\r\n          time     : this.randomDate({min: 6}),\r\n          category : 'primary'\r\n        },\r\n        { index    : 4,\r\n          title    : 'Bruce\\'s Party',\r\n          msg      : 'Chocolate cake oat cake tiramisu',\r\n          icon     : 'CalendarIcon',\r\n          time     : this.randomDate({hr: 2}),\r\n          category : 'warning'\r\n        }\r\n      ],\r\n      settings: {\r\n        maxScrollbarLength: 60,\r\n        wheelSpeed: .60\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    scrollbarTag () { return this.$store.getters.scrollbarTag }\r\n  },\r\n  methods: {\r\n    elapsedTime (startTime) {\r\n      const x        = new Date(startTime)\r\n      const now      = new Date()\r\n      let timeDiff = now - x\r\n      timeDiff    /= 1000\r\n\r\n      const seconds = Math.round(timeDiff)\r\n      timeDiff    = Math.floor(timeDiff / 60)\r\n\r\n      const minutes = Math.round(timeDiff % 60)\r\n      timeDiff    = Math.floor(timeDiff / 60)\r\n\r\n      const hours   = Math.round(timeDiff % 24)\r\n      timeDiff    = Math.floor(timeDiff / 24)\r\n\r\n      const days    = Math.round(timeDiff % 365)\r\n      timeDiff    = Math.floor(timeDiff / 365)\r\n\r\n      const years   = timeDiff\r\n\r\n      if (years > 0) {\r\n        return `${years + (years > 1 ? ' Years ' : ' Year ')}ago`\r\n      } else if (days > 0) {\r\n        return `${days + (days > 1 ? ' Days ' : ' Day ')}ago`\r\n      } else if (hours > 0) {\r\n        return `${hours + (hours > 1 ? ' Hrs ' : ' Hour ')}ago`\r\n      } else if (minutes > 0) {\r\n        return `${minutes + (minutes > 1 ? ' Mins ' : ' Min ')}ago`\r\n      } else if (seconds > 0) {\r\n        return seconds + (seconds > 1 ? ' sec ago' : 'just now')\r\n      }\r\n\r\n      return 'Just Now'\r\n    },\r\n    // Method for creating dummy notification time\r\n    randomDate ({ hr, min, sec }) {\r\n      const date = new Date()\r\n\r\n      if (hr) date.setHours(date.getHours() - hr)\r\n      if (min) date.setMinutes(date.getMinutes() - min)\r\n      if (sec) date.setSeconds(date.getSeconds() - sec)\r\n\r\n      return date\r\n    }\r\n  }\r\n}\r\n\r\n",{"version":3,"sources":["NotificationDropDown.vue"],"names":[],"mappings":";AAmDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"NotificationDropDown.vue","sourceRoot":"src/layouts/components/navbar/components","sourcesContent":["<template>\r\n  <!-- NOTIFICATIONS -->\r\n  <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\">\r\n    <feather-icon icon=\"BellIcon\" class=\"cursor-pointer mt-1 sm:mr-6 mr-2\" :badge=\"unreadNotifications.length\" />\r\n\r\n    <vs-dropdown-menu class=\"notification-dropdown dropdown-custom vx-navbar-dropdown\">\r\n\r\n      <div class=\"notification-top text-center p-5 bg-primary text-white\">\r\n        <h3 class=\"text-white\">{{ unreadNotifications.length }} New</h3>\r\n        <p class=\"opacity-75\">App Notifications</p>\r\n      </div>\r\n\r\n      <component :is=\"scrollbarTag\" ref=\"mainSidebarPs\" class=\"scroll-area--nofications-dropdown p-0 mb-10\" :settings=\"settings\" :key=\"$vs.rtl\">\r\n        <ul class=\"bordered-items\">\r\n          <li v-for=\"ntf in unreadNotifications\" :key=\"ntf.index\" class=\"flex justify-between px-4 py-4 notification cursor-pointer\">\r\n            <div class=\"flex items-start\">\r\n              <feather-icon :icon=\"ntf.icon\" :svgClasses=\"[`text-${ntf.category}`, 'stroke-current mr-1 h-6 w-6']\"></feather-icon>\r\n              <div class=\"mx-2\">\r\n                <span class=\"font-medium block notification-title\" :class=\"[`text-${ntf.category}`]\">{{ ntf.title }}</span>\r\n                <small>{{ ntf.msg }}</small>\r\n              </div>\r\n            </div>\r\n            <small class=\"mt-1 whitespace-no-wrap\">{{ elapsedTime(ntf.time) }}</small>\r\n          </li>\r\n        </ul>\r\n      </component>\r\n\r\n      <div class=\"\r\n        checkout-footer\r\n        fixed\r\n        bottom-0\r\n        rounded-b-lg\r\n        text-primary\r\n        w-full\r\n        p-2\r\n        font-semibold\r\n        text-center\r\n        border\r\n        border-b-0\r\n        border-l-0\r\n        border-r-0\r\n        border-solid\r\n        d-theme-border-grey-light\r\n        cursor-pointer\">\r\n        <span>View All Notifications</span>\r\n      </div>\r\n    </vs-dropdown-menu>\r\n  </vs-dropdown>\r\n</template>\r\n\r\n<script>\r\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\r\n\r\nexport default {\r\n  components: {\r\n    VuePerfectScrollbar\r\n  },\r\n  data () {\r\n    return {\r\n      unreadNotifications: [\r\n        {\r\n          index    : 0,\r\n          title    : 'New Message',\r\n          msg      : 'Are your going to meet me tonight?',\r\n          icon     : 'MessageSquareIcon',\r\n          time     : this.randomDate({sec: 10}),\r\n          category : 'primary'\r\n        },\r\n        { index    : 1,\r\n          title    : 'New Order Recieved',\r\n          msg      : 'You got new order of goods.',\r\n          icon     : 'PackageIcon',\r\n          time     : this.randomDate({sec: 40}),\r\n          category : 'success'\r\n        },\r\n        { index    : 2,\r\n          title    : 'Server Limit Reached!',\r\n          msg      : 'Server have 99% CPU usage.',\r\n          icon     : 'AlertOctagonIcon',\r\n          time     : this.randomDate({min: 1}),\r\n          category : 'danger'\r\n        },\r\n        { index    : 3,\r\n          title    : 'New Mail From Peter',\r\n          msg      : 'Cake sesame snaps cupcake',\r\n          icon     : 'MailIcon',\r\n          time     : this.randomDate({min: 6}),\r\n          category : 'primary'\r\n        },\r\n        { index    : 4,\r\n          title    : 'Bruce\\'s Party',\r\n          msg      : 'Chocolate cake oat cake tiramisu',\r\n          icon     : 'CalendarIcon',\r\n          time     : this.randomDate({hr: 2}),\r\n          category : 'warning'\r\n        }\r\n      ],\r\n      settings: {\r\n        maxScrollbarLength: 60,\r\n        wheelSpeed: .60\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    scrollbarTag () { return this.$store.getters.scrollbarTag }\r\n  },\r\n  methods: {\r\n    elapsedTime (startTime) {\r\n      const x        = new Date(startTime)\r\n      const now      = new Date()\r\n      let timeDiff = now - x\r\n      timeDiff    /= 1000\r\n\r\n      const seconds = Math.round(timeDiff)\r\n      timeDiff    = Math.floor(timeDiff / 60)\r\n\r\n      const minutes = Math.round(timeDiff % 60)\r\n      timeDiff    = Math.floor(timeDiff / 60)\r\n\r\n      const hours   = Math.round(timeDiff % 24)\r\n      timeDiff    = Math.floor(timeDiff / 24)\r\n\r\n      const days    = Math.round(timeDiff % 365)\r\n      timeDiff    = Math.floor(timeDiff / 365)\r\n\r\n      const years   = timeDiff\r\n\r\n      if (years > 0) {\r\n        return `${years + (years > 1 ? ' Years ' : ' Year ')}ago`\r\n      } else if (days > 0) {\r\n        return `${days + (days > 1 ? ' Days ' : ' Day ')}ago`\r\n      } else if (hours > 0) {\r\n        return `${hours + (hours > 1 ? ' Hrs ' : ' Hour ')}ago`\r\n      } else if (minutes > 0) {\r\n        return `${minutes + (minutes > 1 ? ' Mins ' : ' Min ')}ago`\r\n      } else if (seconds > 0) {\r\n        return seconds + (seconds > 1 ? ' sec ago' : 'just now')\r\n      }\r\n\r\n      return 'Just Now'\r\n    },\r\n    // Method for creating dummy notification time\r\n    randomDate ({ hr, min, sec }) {\r\n      const date = new Date()\r\n\r\n      if (hr) date.setHours(date.getHours() - hr)\r\n      if (min) date.setMinutes(date.getMinutes() - min)\r\n      if (sec) date.setSeconds(date.getSeconds() - sec)\r\n\r\n      return date\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n"]}]}