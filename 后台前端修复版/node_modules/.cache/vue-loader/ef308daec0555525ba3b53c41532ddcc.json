{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\src\\views\\apps\\chat\\Chat.vue?vue&type=style&index=0&id=56675fe8&lang=scss&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\src\\views\\apps\\chat\\Chat.vue","mtime":1620826038000},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\css-loader\\index.js","mtime":1664268236894},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1664268237964},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\postcss-loader\\src\\index.js","mtime":1664268237567},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1664268245582},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\vue-loader\\lib\\index.js","mtime":1664268237964}],"contextDependencies":[],"result":["\r\n@import \"@/assets/scss/vuexy/apps/chat.scss\";\r\n",{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";AAuPA","file":"Chat.vue","sourceRoot":"src/views/apps/chat","sourcesContent":["<!-- =========================================================================================\r\n    File Name: Chat.vue\r\n    Description: Chat Application - Stay connected\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n    <div id=\"chat-app\" class=\"border border-solid d-theme-border-grey-light rounded relative overflow-hidden\">\r\n        <vs-sidebar class=\"items-no-padding\" parent=\"#chat-app\" :click-not-close=\"clickNotClose\" :hidden-background=\"clickNotClose\" v-model=\"isChatSidebarActive\" id=\"chat-list-sidebar\">\r\n\r\n            <!-- USER PROFILE SIDEBAR -->\r\n            <user-profile :active=\"activeProfileSidebar\" :userId=\"userProfileId\" class=\"user-profile-container\" :isLoggedInUser=\"isLoggedInUserProfileView\" @closeProfileSidebar=\"closeProfileSidebar\"></user-profile>\r\n\r\n            <div class=\"chat__profile-search flex p-4\">\r\n                <div class=\"relative inline-flex\">\r\n                    <vs-avatar v-if=\"activeUser.photoURL\" class=\"m-0 border-2 border-solid border-white\" :src=\"activeUser.photoURL\" size=\"40px\" @click=\"showProfileSidebar(Number(activeUser.uid), true)\" />\r\n                    <div class=\"h-3 w-3 border-white border border-solid rounded-full absolute right-0 bottom-0\" :class=\"'bg-' + getStatusColor(true)\"></div>\r\n                </div>\r\n                <vs-input icon-no-border icon=\"icon-search\" icon-pack=\"feather\" class=\"w-full mx-5 input-rounded-full\" placeholder=\"Search or start a new chat\" v-model=\"searchQuery\"/>\r\n\r\n                <feather-icon class=\"md:inline-flex lg:hidden -ml-3 cursor-pointer\" icon=\"XIcon\" @click=\"toggleChatSidebar(false)\" />\r\n            </div>\r\n\r\n            <vs-divider class=\"d-theme-border-grey-light m-0\" />\r\n            <component :is=\"scrollbarTag\" class=\"chat-scroll-area pt-4\" :settings=\"settings\" :key=\"$vs.rtl\">\r\n\r\n                <!-- ACTIVE CHATS LIST -->\r\n                <div class=\"chat__chats-list mb-8\">\r\n                    <h3 class=\"text-primary mb-5 px-4\">Chats</h3>\r\n                    <ul class=\"chat__active-chats bordered-items\">\r\n                        <li class=\"cursor-pointer\" v-for=\"(contact, index) in chatContacts\" :key=\"index\" @click=\"updateActiveChatUser(contact.uid)\">\r\n                            <chat-contact showLastMsg :contact=\"contact\" :lastMessaged=\"chatLastMessaged(contact.uid).time\" :unseenMsg=\"chatUnseenMessages(contact.uid)\" :isActiveChatUser=\"isActiveChatUser(contact.uid)\"></chat-contact>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n\r\n                <!-- CONTACTS LIST -->\r\n                <div class=\"chat__contacts\">\r\n                    <h3 class=\"text-primary mb-5 px-4\">Contacts</h3>\r\n                    <ul class=\"chat__contacts bordered-items\">\r\n                        <li class=\"cursor-pointer\" v-for=\"contact in contacts\" :key=\"contact.uid\" @click=\"updateActiveChatUser(contact.uid)\">\r\n                            <chat-contact :contact=\"contact\"></chat-contact>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </component>\r\n        </vs-sidebar>\r\n\r\n        <!-- RIGHT COLUMN -->\r\n        <div class=\"chat__bg no-scroll-content chat-content-area border border-solid d-theme-border-grey-light border-t-0 border-r-0 border-b-0\" :class=\"{'sidebar-spacer--wide': clickNotClose, 'flex items-center justify-center': activeChatUser === null}\">\r\n            <template v-if=\"activeChatUser\">\r\n                <div class=\"chat__navbar\">\r\n                    <chat-navbar :isSidebarCollapsed=\"!clickNotClose\" :user-id=\"activeChatUser\" :isPinnedProp=\"isChatPinned\" @openContactsSidebar=\"toggleChatSidebar(true)\" @showProfileSidebar=\"showProfileSidebar\" @toggleIsChatPinned=\"toggleIsChatPinned\"></chat-navbar>\r\n                </div>\r\n                <component :is=\"scrollbarTag\" class=\"chat-content-scroll-area border border-solid d-theme-border-grey-light\" :settings=\"settings\" ref=\"chatLogPS\" :key=\"$vs.rtl\">\r\n                    <div class=\"chat__log\" ref=\"chatLog\">\r\n                        <chat-log :userId=\"activeChatUser\" v-if=\"activeChatUser\"></chat-log>\r\n                    </div>\r\n                </component>\r\n                <div class=\"chat__input flex p-4 bg-white\">\r\n                    <vs-input class=\"flex-1\" placeholder=\"Type Your Message\" v-model=\"typedMessage\" @keyup.enter=\"sendMsg\" />\r\n                    <vs-button class=\"bg-primary-gradient ml-4\" type=\"filled\" @click=\"sendMsg\">Send</vs-button>\r\n                </div>\r\n            </template>\r\n            <template v-else>\r\n                <div class=\"flex flex-col items-center\">\r\n                    <feather-icon icon=\"MessageSquareIcon\" class=\"mb-4 bg-white p-8 shadow-md rounded-full\" svgClasses=\"w-16 h-16\"></feather-icon>\r\n                    <h4 class=\" py-2 px-4 bg-white shadow-md rounded-full cursor-pointer\" @click.stop=\"toggleChatSidebar(true)\">Start Conversation</h4>\r\n                </div>\r\n            </template>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport ChatContact         from './ChatContact.vue'\r\nimport ChatLog             from './ChatLog.vue'\r\nimport ChatNavbar          from './ChatNavbar.vue'\r\nimport UserProfile         from './UserProfile.vue'\r\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\r\nimport moduleChat          from '@/store/chat/moduleChat.js'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      active               : true,\r\n      isHidden             : false,\r\n      searchContact        : '',\r\n      activeProfileSidebar : false,\r\n      activeChatUser       : null,\r\n      userProfileId        : -1,\r\n      typedMessage         : '',\r\n      isChatPinned         : false,\r\n      settings             : {\r\n        maxScrollbarLength : 60,\r\n        wheelSpeed         : 0.70\r\n      },\r\n      clickNotClose        : true,\r\n      isChatSidebarActive  : true,\r\n      isLoggedInUserProfileView: false\r\n    }\r\n  },\r\n  watch: {\r\n    windowWidth () {\r\n      this.setSidebarWidth()\r\n    }\r\n  },\r\n  computed: {\r\n    chatLastMessaged () {\r\n      return (userId) => this.$store.getters['chat/chatLastMessaged'](userId)\r\n    },\r\n    chatUnseenMessages () {\r\n      return (userId) => {\r\n        const unseenMsg = this.$store.getters['chat/chatUnseenMessages'](userId)\r\n        if (unseenMsg) return unseenMsg\r\n      }\r\n    },\r\n    activeUser () {\r\n      return this.$store.state.AppActiveUser\r\n    },\r\n    getStatusColor () {\r\n      return (isActiveUser) => {\r\n        const userStatus = this.getUserStatus(isActiveUser)\r\n\r\n        if (userStatus === 'online') {\r\n          return 'success'\r\n        } else if (userStatus === 'do not disturb') {\r\n          return 'danger'\r\n        } else if (userStatus === 'away') {\r\n          return 'warning'\r\n        } else {\r\n          return 'grey'\r\n        }\r\n      }\r\n    },\r\n    chatContacts () {\r\n      return this.$store.getters['chat/chatContacts']\r\n    },\r\n    contacts () {\r\n      return this.$store.getters['chat/contacts']\r\n    },\r\n    searchQuery: {\r\n      get () {\r\n        return this.$store.state.chat.chatSearchQuery\r\n      },\r\n      set (val) {\r\n        this.$store.dispatch('chat/setChatSearchQuery', val)\r\n      }\r\n    },\r\n    scrollbarTag () {\r\n      return this.$store.getters.scrollbarTag\r\n    },\r\n    isActiveChatUser () {\r\n      return (userId) => userId === this.activeChatUser\r\n    },\r\n    windowWidth () {\r\n      return this.$store.state.windowWidth\r\n    }\r\n  },\r\n  methods: {\r\n    getUserStatus (isActiveUser) {\r\n      // return \"active\"\r\n      return isActiveUser ? this.$store.state.AppActiveUser.status : this.contacts[this.activeChatUser].status\r\n    },\r\n    closeProfileSidebar (value) {\r\n      this.activeProfileSidebar = value\r\n    },\r\n    updateActiveChatUser (contactId) {\r\n      this.activeChatUser = contactId\r\n      if (this.$store.getters['chat/chatDataOfUser'](this.activeChatUser)) {\r\n        this.$store.dispatch('chat/markSeenAllMessages', contactId)\r\n      }\r\n      const chatData = this.$store.getters['chat/chatDataOfUser'](this.activeChatUser)\r\n      if (chatData) this.isChatPinned = chatData.isPinned\r\n      else this.isChatPinned = false\r\n      this.toggleChatSidebar()\r\n      this.typedMessage = ''\r\n    },\r\n    showProfileSidebar (userId, openOnLeft = false) {\r\n      this.userProfileId = userId\r\n      this.isLoggedInUserProfileView = openOnLeft\r\n      this.activeProfileSidebar = !this.activeProfileSidebar\r\n    },\r\n    sendMsg () {\r\n      if (!this.typedMessage) return\r\n      const payload = {\r\n        'isPinned': this.isChatPinned,\r\n        'msg': {\r\n          'textContent' : this.typedMessage,\r\n          'time'        : String(new Date()),\r\n          'isSent'      : true,\r\n          'isSeen'      : false\r\n        },\r\n        'id': this.activeChatUser\r\n      }\r\n      this.$store.dispatch('chat/sendChatMessage', payload)\r\n      this.typedMessage = ''\r\n\r\n      const scroll_el = this.$refs.chatLogPS.$el || this.$refs.chatLogPS\r\n      scroll_el.scrollTop = this.$refs.chatLog.scrollHeight\r\n    },\r\n    toggleIsChatPinned (value) {\r\n      this.isChatPinned = value\r\n    },\r\n    setSidebarWidth () {\r\n      if (this.windowWidth < 1200) {\r\n        this.isChatSidebarActive = this.clickNotClose = false\r\n      } else {\r\n        this.isChatSidebarActive = this.clickNotClose = true\r\n      }\r\n    },\r\n    toggleChatSidebar (value = false) {\r\n      if (!value && this.clickNotClose) return\r\n      this.isChatSidebarActive = value\r\n    }\r\n  },\r\n  components: {\r\n    VuePerfectScrollbar,\r\n    ChatContact,\r\n    UserProfile,\r\n    ChatNavbar,\r\n    ChatLog\r\n  },\r\n  created () {\r\n    this.$store.registerModule('chat', moduleChat)\r\n    this.$store.dispatch('chat/fetchContacts')\r\n    this.$store.dispatch('chat/fetchChatContacts')\r\n    this.$store.dispatch('chat/fetchChats')\r\n    this.setSidebarWidth()\r\n  },\r\n  beforeDestroy () {\r\n    this.$store.unregisterModule('chat')\r\n  },\r\n  mounted () {\r\n    this.$store.dispatch('chat/setChatSearchQuery', '')\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/vuexy/apps/chat.scss\";\r\n</style>\r\n"]}]}