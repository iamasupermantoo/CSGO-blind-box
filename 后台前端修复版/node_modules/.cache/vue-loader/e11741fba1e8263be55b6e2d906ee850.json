{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\src\\views\\apps\\email\\EmailView.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\src\\views\\apps\\email\\EmailView.vue","mtime":1620826038000},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\babel-loader\\lib\\index.js","mtime":1663908471338},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\vue-loader\\lib\\index.js","mtime":1664268237964}],"contextDependencies":[],"result":["\r\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\r\nimport EmailMailCard from './EmailMailCard.vue'\r\n\r\nexport default {\r\n  props: {\r\n    emailTags: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    openMailId: {\r\n      required: true,\r\n      validator: prop => typeof prop === 'number' || prop === null\r\n    },\r\n    isSidebarActive: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    mailFilter: {\r\n      type: String\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      showThread: false,\r\n      settings: {\r\n        maxScrollbarLength: 60,\r\n        wheelSpeed: 0.50\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    isSidebarActive (value) {\r\n      if (!value) {\r\n        this.$emit('closeSidebar')\r\n        setTimeout(() => {\r\n          this.showThread = false\r\n        }, 500)\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    currentMail () {\r\n      return this.$store.getters['email/getMail'](this.openMailId)\r\n    },\r\n    labelColor () {\r\n      return (label) => {\r\n        const tags = this.$store.state.email.mailTags\r\n        return tags.find((tag) => {\r\n          return tag.value === label\r\n        }).color\r\n      }\r\n    },\r\n    currentMailLabels: {\r\n      get () {\r\n        return this.currentMail.labels\r\n      },\r\n      set (value) {\r\n        if (Array.isArray(value)) {\r\n          const payload = { mailId: this.openMailId, labels: value }\r\n          this.$store.dispatch('email/setLabels', payload)\r\n        }\r\n      }\r\n    },\r\n    scrollbarTag () { return this.$store.getters.scrollbarTag }\r\n  },\r\n  methods: {\r\n    toggleIsStarred () {\r\n      const payload = { mailId: this.openMailId, value: !this.currentMail.isStarred }\r\n      this.$store.dispatch('email/toggleIsMailStarred', payload)\r\n    },\r\n    moveTo (to) {\r\n      this.$emit('closeSidebar')\r\n      this.$emit('moveTo', to)\r\n    }\r\n  },\r\n  components: {\r\n    VuePerfectScrollbar,\r\n    EmailMailCard\r\n  },\r\n  updated () {\r\n    if (!this.currentMail) return\r\n    if (this.currentMail.unread && this.isSidebarActive) this.$store.dispatch('email/setUnread', { emailIds: [this.openMailId], unread: false })\r\n  }\r\n}\r\n\r\n",{"version":3,"sources":["EmailView.vue"],"names":[],"mappings":";AAyIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EmailView.vue","sourceRoot":"src/views/apps/email","sourcesContent":["<!-- =========================================================================================\r\n    File Name: EmailView.vue\r\n    Description: Email Application - Single Email View (Inbox)\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n    <div>\r\n        <vs-sidebar click-not-close parent=\"#email-app\" :hidden-background=\"true\" class=\"full-vs-sidebar email-view-sidebar items-no-padding\" v-model=\"isSidebarActive\" position-right>\r\n            <div class=\"mail-sidebar-content px-0 sm:pb-6 h-full\" v-if=\"currentMail\">\r\n                <div class=\"flex flex-wrap items-center email-header justify-between md:px-8 px-6 sm:pb-2 sm: pt-6 d-theme-dark-bg\">\r\n                    <div class=\"flex mb-4\">\r\n                        <div class=\"flex items-center\">\r\n                            <feather-icon :icon=\"$vs.rtl ? 'ArrowRightIcon' : 'ArrowLeftIcon'\" @click=\"$emit('closeSidebar')\" class=\"cursor-pointer mr-4\" svg-classes=\"w-6 h-6\"></feather-icon>\r\n                            <h4 v-if=\"currentMail.subject\">{{ currentMail.subject }}</h4>\r\n                            <h4 v-else>(no subject)</h4>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"ml-10 mb-4 mt-1\">\r\n                        <div class=\"email__actions--single flex items-baseline\">\r\n\r\n                            <feather-icon icon=\"StarIcon\" class=\"cursor-pointer\" :svgClasses=\"[{'text-warning stroke-current stroke-current': currentMail.isStarred}, 'h-6 w-6']\" @click=\"toggleIsStarred\" />\r\n\r\n                            <!-- MOVE TO DROPDOWN -->\r\n                            <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\" v-if=\"mailFilter != 'sent'\">\r\n                                <feather-icon icon=\"FolderIcon\" svg-classes=\"h-6 w-6\" class=\"ml-4\"></feather-icon>\r\n                                <vs-dropdown-menu>\r\n                                  <vs-dropdown-item @click=\"moveTo('inbox')\" v-if=\"currentMail.mailFolder != 'inbox'\">\r\n                                    <span class=\"flex items-center\">\r\n                                      <feather-icon icon=\"MailIcon\" svgClasses=\"h-4 w-4\" class=\"mr-2\" />\r\n                                      <span>Inbox</span>\r\n                                    </span>\r\n                                  </vs-dropdown-item>\r\n\r\n                                  <vs-dropdown-item @click=\"moveTo('draft')\" v-if=\"currentMail.mailFolder != 'draft'\">\r\n                                    <span class=\"flex items-center\">\r\n                                      <feather-icon icon=\"Edit2Icon\" svgClasses=\"h-4 w-4\" class=\"mr-2\" />\r\n                                      <span>Draft</span>\r\n                                    </span>\r\n                                  </vs-dropdown-item>\r\n\r\n                                  <vs-dropdown-item @click=\"moveTo('spam')\" v-if=\"currentMail.mailFolder != 'spam'\">\r\n                                    <span class=\"flex items-center\">\r\n                                      <feather-icon icon=\"InfoIcon\" svgClasses=\"h-4 w-4\" class=\"mr-2\" />\r\n                                      <span>Spam</span>\r\n                                    </span>\r\n                                  </vs-dropdown-item>\r\n\r\n                                  <vs-dropdown-item @click=\"moveTo('trash')\" v-if=\"currentMail.mailFolder != 'trash'\">\r\n                                    <span class=\"flex items-center\">\r\n                                      <feather-icon icon=\"TrashIcon\" svgClasses=\"h-4 w-4\" class=\"mr-2\" />\r\n                                      <span>Trash</span>\r\n                                    </span>\r\n                                  </vs-dropdown-item>\r\n                                </vs-dropdown-menu>\r\n                            </vs-dropdown>\r\n\r\n                            <!-- ADD LABEL DROPDOWN -->\r\n                            <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\">\r\n                                <feather-icon icon=\"TagIcon\" svg-classes=\"h-6 w-6\" class=\"cursor-pointer ml-4\"></feather-icon>\r\n                                <vs-dropdown-menu style=\"z-index: 40001\">\r\n                                        <vs-dropdown-item v-for=\"(label, index) in emailTags\" :key=\"index\" @click.stop>\r\n                                            <vs-checkbox :vs-value=\"label.value\" v-model=\"currentMailLabels\">{{ label.text }}</vs-checkbox>\r\n                                        </vs-dropdown-item>\r\n                                </vs-dropdown-menu>\r\n                            </vs-dropdown>\r\n\r\n                            <feather-icon icon=\"MailIcon\" svg-classes=\"h-6 w-6\" class=\"cursor-pointer ml-4\" @click=\"$emit('markUnread')\"></feather-icon>\r\n                            <feather-icon v-if=\"currentMail.mailFolder != 'trash'\" icon=\"TrashIcon\" svg-classes=\"h-6 w-6\" class=\"cursor-pointer ml-4\" @click=\"$emit('removeMail')\"></feather-icon>\r\n                            <feather-icon :icon=\"$vs.rtl ? 'ChevronsRightIcon' : 'ChevronsLeftIcon'\" svg-classes=\"h-6 w-6\" class=\"cursor-pointer ml-4 hidden sm:inline-flex\" @click=\"$emit('previousMail')\" />\r\n                            <feather-icon :icon=\"$vs.rtl ? 'ChevronsLeftIcon' : 'ChevronsRightIcon'\" svg-classes=\"h-6 w-6\" class=\"cursor-pointer ml-4 hidden sm:inline-flex\" @click=\"$emit('nextMail')\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <component :is=\"scrollbarTag\" class=\"scroll-area-mail-content md:px-8 md:pb-8 pt-4 px-6 pb-6\" :settings=\"settings\" :key=\"$vs.rtl\">\r\n                <!-- LABEL ROW -->\r\n                <div class=\"vx-row\">\r\n                    <div class=\"vx-col w-full\">\r\n                        <div class=\"email__labels--single flex ml-10 items-center mt-2\">\r\n                            <transition-group name=\"list\" tag=\"div\" class=\"flex\">\r\n                                <div v-for=\"label in currentMail.labels\" :key=\"label\" class=\"open-mail-label flex items-center mr-4\">\r\n                                    <div class=\"h-3 w-3 rounded-full mr-1\" :class=\"'bg-' + labelColor(label)\"></div>\r\n                                    <span class=\"text-sm\">{{ label | capitalize }}</span>\r\n                                </div>\r\n                            </transition-group>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!-- /LABEL ROW -->\r\n                <br>\r\n\r\n                <div class=\"vx-row mb-4\" v-if=\"currentMail.replies.length && !showThread\">\r\n                    <div class=\"vx-col w-full\">\r\n                        <span class=\"text-primary font-medium ml-10 cursor-pointer\" @click=\"showThread = true\">{{ currentMail.replies.length }} Earlier Messages</span>\r\n                    </div>\r\n                </div>\r\n                <div v-if=\"isSidebarActive\">\r\n\r\n                    <!-- ALL MESSAGES - THREAD -->\r\n                    <div class=\"vx-row\" v-for=\"threadMail in currentMail.replies.slice().reverse()\" :key=\"threadMail.id\" v-if=\"showThread\">\r\n                        <div class=\"vx-col w-full\">\r\n                            <email-mail-card :mailContent=\"threadMail\" class=\"mb-10\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- LATEST MESSAGE -->\r\n                    <div class=\"vx-row\">\r\n                        <div class=\"vx-col w-full\">\r\n                          <email-mail-card :mailContent=\"currentMail\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"vx-row\" style=\"margin-top: 2.2rem\">\r\n                        <div class=\"vx-col w-full\">\r\n                            <vx-card>\r\n                                <div class=\"vx-row\">\r\n                                    <div class=\"vx-col w-full flex justify-between\">\r\n                                        <span class=\"text-lg\">Click here to <span class=\"text-primary font-semibold cursor-pointer\">Reply</span> or <span class=\"text-primary font-semibold cursor-pointer\">Forward</span></span>\r\n                                        <feather-icon icon=\"PaperclipIcon\"></feather-icon>\r\n                                    </div>\r\n                                </div>\r\n                            </vx-card>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </component>\r\n            </div>\r\n        </vs-sidebar>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\r\nimport EmailMailCard from './EmailMailCard.vue'\r\n\r\nexport default {\r\n  props: {\r\n    emailTags: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    openMailId: {\r\n      required: true,\r\n      validator: prop => typeof prop === 'number' || prop === null\r\n    },\r\n    isSidebarActive: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    mailFilter: {\r\n      type: String\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      showThread: false,\r\n      settings: {\r\n        maxScrollbarLength: 60,\r\n        wheelSpeed: 0.50\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    isSidebarActive (value) {\r\n      if (!value) {\r\n        this.$emit('closeSidebar')\r\n        setTimeout(() => {\r\n          this.showThread = false\r\n        }, 500)\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    currentMail () {\r\n      return this.$store.getters['email/getMail'](this.openMailId)\r\n    },\r\n    labelColor () {\r\n      return (label) => {\r\n        const tags = this.$store.state.email.mailTags\r\n        return tags.find((tag) => {\r\n          return tag.value === label\r\n        }).color\r\n      }\r\n    },\r\n    currentMailLabels: {\r\n      get () {\r\n        return this.currentMail.labels\r\n      },\r\n      set (value) {\r\n        if (Array.isArray(value)) {\r\n          const payload = { mailId: this.openMailId, labels: value }\r\n          this.$store.dispatch('email/setLabels', payload)\r\n        }\r\n      }\r\n    },\r\n    scrollbarTag () { return this.$store.getters.scrollbarTag }\r\n  },\r\n  methods: {\r\n    toggleIsStarred () {\r\n      const payload = { mailId: this.openMailId, value: !this.currentMail.isStarred }\r\n      this.$store.dispatch('email/toggleIsMailStarred', payload)\r\n    },\r\n    moveTo (to) {\r\n      this.$emit('closeSidebar')\r\n      this.$emit('moveTo', to)\r\n    }\r\n  },\r\n  components: {\r\n    VuePerfectScrollbar,\r\n    EmailMailCard\r\n  },\r\n  updated () {\r\n    if (!this.currentMail) return\r\n    if (this.currentMail.unread && this.isSidebarActive) this.$store.dispatch('email/setUnread', { emailIds: [this.openMailId], unread: false })\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n"]}]}