{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\src\\views\\components\\extra-components\\autocomplete\\Autocomplete.vue?vue&type=style&index=0&id=0c3865a2&lang=scss&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\src\\views\\components\\extra-components\\autocomplete\\Autocomplete.vue","mtime":1620826038000},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\css-loader\\index.js","mtime":1664268236894},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1664268237964},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\postcss-loader\\src\\index.js","mtime":1664268237567},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1664268245582},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\vue-loader\\lib\\index.js","mtime":1664268237964}],"contextDependencies":[],"result":["\r\n@import \"@/assets/scss/vuexy/extraComponents/autocomplete.scss\";\r\n",{"version":3,"sources":["Autocomplete.vue"],"names":[],"mappings":";AAgVA","file":"Autocomplete.vue","sourceRoot":"src/views/components/extra-components/autocomplete","sourcesContent":["<!-- =========================================================================================\r\n    File Name: Autocomplete.vue\r\n    Description: Autocomplete demo\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n    Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n<template>\r\n  <div id=\"page-autocomplete-demo\">\r\n\r\n    <!-- BASIC AUTOCOMPLETE -->\r\n    <vx-card title=\"Basic Autocomplete\" code-toggler>\r\n      <vue-simple-suggest\r\n        v-model=\"chosen\"\r\n        :list=\"simpleSuggestionList\"\r\n        :filter-by-query=\"true\">\r\n      </vue-simple-suggest>\r\n\r\n      <p class=\"mt-4\">Chosen element: {{ chosen }}</p>\r\n\r\n      <template slot=\"codeContainer\">\r\n&lt;template&gt;\r\n  &lt;vue-simple-suggest\r\n    v-model=&quot;chosen&quot;\r\n    :list=&quot;simpleSuggestionList&quot;\r\n    :filter-by-query=&quot;true&quot;&gt;\r\n    &lt;!-- Filter by input text to only show the matching results --&gt;\r\n  &lt;/vue-simple-suggest&gt;\r\n\r\n  &lt;p class=&quot;mt-4&quot;&gt;Chosen element: {{ chosen }}&lt;/p&gt;\r\n&lt;/template&gt;\r\n\r\n&lt;script&gt;\r\nexport default {\r\n  data() {\r\n    return {\r\n      chosen: &apos;&apos;,\r\n    }\r\n  },\r\n  methods: {\r\n    simpleSuggestionList() {\r\n      return [\r\n        &apos;Vue.js&apos;,\r\n        &apos;React.js&apos;,\r\n        &apos;Angular.js&apos;\r\n      ]\r\n    },\r\n  }\r\n}\r\n&lt;/script&gt;\r\n\r\n&lt;style lang=&quot;scss&quot;&gt;\r\n@import &quot;@/assets/scss/vuexy/extraComponents/autocomplete.scss&quot;;\r\n&lt;/style&gt;\r\n      </template>\r\n    </vx-card>\r\n    <!-- /BASIC AUTOCOMPLETE -->\r\n\r\n\r\n    <!-- AJAX BASED AUTOCOMPLETE -->\r\n    <vx-card title=\"Ajax Based Autocomplete\" code-toggler>\r\n      <vue-simple-suggest pattern=\"\\w+\"\r\n        v-model=\"model\"\r\n        :list=\"getList\"\r\n        :max-suggestions=\"10\"\r\n        :min-length=\"3\"\r\n        :debounce=\"200\"\r\n        :filter-by-query=\"false\"\r\n        :prevent-submit=\"true\"\r\n        :controls=\"{\r\n          selectionUp: [38, 33],\r\n          selectionDown: [40, 34],\r\n          select: [13, 36],\r\n          hideList: [27, 35]\r\n        }\"\r\n        :mode=\"mode\"\r\n        :nullable-select=\"true\"\r\n        ref=\"suggestComponent\"\r\n        placeholder=\"Search information...\"\r\n        value-attribute=\"id\"\r\n        display-attribute=\"text\"\r\n        @select=\"onSuggestSelect\">\r\n\r\n        <div class=\"g\">\r\n          <input type=\"text\">\r\n        </div>\r\n\r\n        <template slot=\"misc-item-above\" slot-scope=\"{ suggestions, query }\">\r\n          <div class=\"misc-item\">\r\n            <span>You're searching for '{{ query }}'.</span>\r\n          </div>\r\n\r\n          <template v-if=\"suggestions.length > 0\">\r\n            <div class=\"misc-item\">\r\n              <span>{{ suggestions.length }} suggestions are shown...</span>\r\n            </div>\r\n            <hr>\r\n          </template>\r\n\r\n          <div class=\"misc-item\" v-else-if=\"!loading\">\r\n            <span>No results</span>\r\n          </div>\r\n        </template>\r\n\r\n        <div slot=\"suggestion-item\" slot-scope=\"scope\" :title=\"scope.suggestion.description\">\r\n          <div class=\"text\">\r\n            <span v-html=\"boldenSuggestion(scope)\"></span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"misc-item\" slot=\"misc-item-below\" slot-scope=\"{ suggestions }\" v-if=\"loading\">\r\n          <span>Loading...</span>\r\n        </div>\r\n      </vue-simple-suggest>\r\n\r\n      <p class=\"mt-3\">Selected element ({{ typeof selected }}): <pre class=\"selected hljs\"><span v-html=\"selected\"></span></pre></p>\r\n\r\n      <template slot=\"codeContainer\">\r\n&lt;template&gt;\r\n  &lt;vue-simple-suggest\r\n    pattern=&quot;\\w+&quot;\r\n    v-model=&quot;model&quot;\r\n    :list=&quot;getList&quot;\r\n    :max-suggestions=&quot;10&quot;\r\n    :min-length=&quot;3&quot;\r\n    :debounce=&quot;200&quot;\r\n    :filter-by-query=&quot;false&quot;\r\n    :prevent-submit=&quot;true&quot;\r\n    :controls=&quot;{\r\n      selectionUp: [38, 33],\r\n      selectionDown: [40, 34],\r\n      select: [13, 36],\r\n      hideList: [27, 35]\r\n    }&quot;\r\n    :mode=&quot;mode&quot;\r\n    :nullable-select=&quot;true&quot;\r\n    ref=&quot;suggestComponent&quot;\r\n    placeholder=&quot;Search information...&quot;\r\n    value-attribute=&quot;id&quot;\r\n    display-attribute=&quot;text&quot;\r\n    @select=&quot;onSuggestSelect&quot;&gt;\r\n\r\n    &lt;div class=&quot;g&quot;&gt;\r\n      &lt;input type=&quot;text&quot;&gt;\r\n    &lt;/div&gt;\r\n\r\n    &lt;template slot=&quot;misc-item-above&quot; slot-scope=&quot;{ suggestions, query }&quot;&gt;\r\n      &lt;div class=&quot;misc-item&quot;&gt;\r\n        &lt;span&gt;You&apos;re searching for &apos;{{ \"\\{\\{ query \\}\\}\" }}&apos;.&lt;/span&gt;\r\n      &lt;/div&gt;\r\n\r\n      &lt;template v-if=&quot;suggestions.length &gt; 0&quot;&gt;\r\n        &lt;div class=&quot;misc-item&quot;&gt;\r\n          &lt;span&gt;{{ \"\\{\\{ suggestions.length \\}\\}\" }} suggestions are shown...&lt;/span&gt;\r\n        &lt;/div&gt;\r\n        &lt;hr&gt;\r\n      &lt;/template&gt;\r\n\r\n      &lt;div class=&quot;misc-item&quot; v-else-if=&quot;!loading&quot;&gt;\r\n        &lt;span&gt;No results&lt;/span&gt;\r\n      &lt;/div&gt;\r\n    &lt;/template&gt;\r\n\r\n    &lt;div slot=&quot;suggestion-item&quot; slot-scope=&quot;scope&quot; :title=&quot;scope.suggestion.description&quot;&gt;\r\n      &lt;div class=&quot;text&quot;&gt;\r\n        &lt;span v-html=&quot;boldenSuggestion(scope)&quot;&gt;&lt;/span&gt;\r\n      &lt;/div&gt;\r\n    &lt;/div&gt;\r\n\r\n    &lt;div class=&quot;misc-item&quot; slot=&quot;misc-item-below&quot; slot-scope=&quot;{ suggestions }&quot; v-if=&quot;loading&quot;&gt;\r\n      &lt;span&gt;Loading...&lt;/span&gt;\r\n    &lt;/div&gt;\r\n  &lt;/vue-simple-suggest&gt;\r\n\r\n  &lt;p class=&quot;mt-3&quot;&gt;Selected element ({{ \"\\{\\{ typeof selected \\}\\}\" }}): &lt;pre class=&quot;selected hljs&quot;&gt;&lt;span v-html=&quot;selected&quot;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/p&gt;\r\n&lt;/template&gt;\r\n\r\n&lt;script&gt;\r\nexport default {\r\n  data() {\r\n    return {\r\n      model: null,\r\n    }\r\n  },\r\n  methods: {\r\n    getList (inputValue) {\r\n      return new Promise((resolve, reject) =&gt; {\r\n        let url = &grave;https://en.wikipedia.org/w/api.php?origin=*&amp;action=opensearch&amp;namespace=*&amp;search=${inputValue}&amp;limit=10&amp;namespace=0&amp;format=json&grave;\r\n        fetch(url).then(response =&gt; {\r\n          if (!response.ok) {\r\n            reject()\r\n          }\r\n          response.json().then(json =&gt; {\r\n            json.shift();\r\n            let result = []\r\n            const fields = [&apos;text&apos;, &apos;description&apos;, &apos;link&apos;]\r\n            json.forEach((part, i) =&gt; {\r\n              part.forEach((el, j) =&gt; {\r\n                if (!result[j]) {\r\n                  result.push({\r\n                    id: j+1\r\n                  })\r\n                }\r\n                result[j][fields[i]] = el\r\n              })\r\n            })\r\n            resolve(result)\r\n            // resolve([...(json.items || [])])\r\n          }).catch(e =&gt; {\r\n            reject(e)\r\n          })\r\n        }).catch(error =&gt; {\r\n          this.loading = false\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n    onSuggestSelect (suggest) {\r\n      this.selected = suggest\r\n    },\r\n    boldenSuggestion(scope) {\r\n      if (!scope) return scope;\r\n      const { suggestion, query } = scope;\r\n      let result = this.$refs.suggestComponent.displayProperty(suggestion);\r\n      if (!query) return result;\r\n      const texts = query.split(/[\\s-_/\\\\|.]/gm).filter(t =&gt; !!t) || [&apos;&apos;];\r\n      return result.replace(new RegExp(&apos;(.*?)(&apos; + texts.join(&apos;|&apos;) + &apos;)(.*?)&apos;,&apos;gi&apos;), &apos;$1&lt;b&gt;$2&lt;/b&gt;$3&apos;);\r\n    },\r\n  }\r\n}\r\n&lt;/script&gt;\r\n      </template>\r\n    </vx-card>\r\n    <!-- /AJAX BASED AUTOCOMPLETE -->\r\n\r\n\r\n    <!-- MODE -->\r\n    <vx-card title=\"Mode\">\r\n      <p class=\"mb-3\">Determines the event, that triggers <code>v-model</code>. Can be one of <code>'input'</code> (default) or <code>'select'</code>.</p>\r\n\r\n      <p class=\"mb-3\">For example, if <code>'input'</code> is chosen - then v-model will update the value each time an <code>input</code> event is fired, setting the input's string.</p>\r\n\r\n      <p class=\"mb-3\">Same is for <code>'select'</code> - v-model changes only when something is selected from the list, setting the selected value (string, object or whatever) to its argument.</p>\r\n\r\n      <p class=\"mb-3\">A proper use-case for it being when one wants to use the component only for selection binding and custom input for text binding:</p>\r\n\r\n      <prism language=\"markup\" class=\"rounded-lg\">\r\n&lt;vue-simple-suggest v-model=&quot;selected&quot; mode=&quot;select&quot;&gt;\r\n  &lt;input v-model=&quot;text&quot;&gt;\r\n&lt;/vue-simple-suggest&gt;\r\n      </prism>\r\n    </vx-card>\r\n    <!-- /MODE -->\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VueSimpleSuggest from 'vue-simple-suggest'\r\nimport 'vue-simple-suggest/dist/styles.css'\r\n\r\nimport Prism from 'vue-prism-component'\r\n\r\nexport default {\r\n  name: 'Autocomplete',\r\n  data () {\r\n    return {\r\n      chosen: '',\r\n      selected: null,\r\n      model: null,\r\n      mode: 'input',\r\n      loading: false,\r\n      log: []\r\n    }\r\n  },\r\n  methods: {\r\n    simpleSuggestionList () {\r\n      return [\r\n        'Vue.js',\r\n        'React.js',\r\n        'Angular.js'\r\n      ]\r\n    },\r\n    onSuggestSelect (suggest) {\r\n      this.selected = suggest\r\n    },\r\n    boldenSuggestion (scope) {\r\n      if (!scope) return scope\r\n      const { suggestion, query } = scope\r\n      const result = this.$refs.suggestComponent.displayProperty(suggestion)\r\n      if (!query) return result\r\n      const texts = query.split(/[\\s-_/\\\\|.]/gm).filter(t => !!t) || ['']\r\n      return result.replace(new RegExp(`(.*?)(${  texts.join('|')  })(.*?)`, 'gi'), '$1<b>$2</b>$3')\r\n    },\r\n    getList (inputValue) {\r\n      return new Promise((resolve, reject) => {\r\n        const url = `https://en.wikipedia.org/w/api.php?origin=*&action=opensearch&namespace=*&search=${inputValue}&limit=10&namespace=0&format=json`\r\n        fetch(url).then(response => {\r\n          if (!response.ok) {\r\n            reject()\r\n          }\r\n          response.json().then(json => {\r\n            json.shift()\r\n            const result = []\r\n            const fields = ['text', 'description', 'link']\r\n            json.forEach((part, i) => {\r\n              part.forEach((el, j) => {\r\n                if (!result[j]) {\r\n                  result.push({\r\n                    id: j + 1\r\n                  })\r\n                }\r\n                result[j][fields[i]] = el\r\n              })\r\n            })\r\n            resolve(result)\r\n          }).catch(e => {\r\n            reject(e)\r\n          })\r\n        }).catch(error => {\r\n          this.loading = false\r\n          reject(error)\r\n        })\r\n      })\r\n    }\r\n  },\r\n  components: {\r\n    VueSimpleSuggest,\r\n    Prism\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/vuexy/extraComponents/autocomplete.scss\";\r\n</style>\r\n"]}]}