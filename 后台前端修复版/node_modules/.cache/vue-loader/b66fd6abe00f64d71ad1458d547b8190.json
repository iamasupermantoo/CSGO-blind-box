{"remainingRequest":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\src\\views\\charts-and-maps\\maps\\google-map\\GoogleMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\src\\views\\charts-and-maps\\maps\\google-map\\GoogleMap.vue","mtime":1620826038000},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport DataViewSidebar from \"./DataViewSidebar.vue\";\r\nexport default {\r\n  components: {\r\n    DataViewSidebar,\r\n  },\r\n  data() {\r\n    return {\r\n      addNewDataSidebar: false,\r\n      sidebarData: {},\r\n      task: [],\r\n      currentPage:1,\r\n      pageSize:10,\r\n      total:0,\r\n      totalPages:1\r\n    };\r\n  },\r\n  computed: {},\r\n  methods: {\r\n    getTask(){\r\n      let _this = this;\r\n      _this.$axios({\r\n        url: \"/admin/Robot/getTask\",\r\n        method: \"post\",\r\n        data: {\r\n          page:_this.currentPage,\r\n          pageSize:_this.pageSize\r\n        }\r\n      }).then(res => {\r\n        if(res.data.status == 1){\r\n          _this.task = res.data.data.list;\r\n        }else{\r\n          _this.task = [];\r\n        }\r\n      })\r\n    },\r\n    toEdit(row){\r\n      this.addNewDataSidebar = true;\r\n      this.sidebarData = row;\r\n      console.log(row);\r\n    },\r\n    restart(row){\r\n      console.log(row);\r\n    },\r\n    change(index){\r\n      let _this = this;\r\n      _this.$axios({\r\n        url: \"/admin/Task/start\",\r\n        method: \"post\",\r\n        data:{\r\n          id:_this.task[index].id,\r\n          status:_this.task[index].status,\r\n          type:_this.task[index].type\r\n        }\r\n      }).then(res => {\r\n        if(res.data.status == 1){\r\n          \r\n        }else{\r\n          \r\n        }\r\n      })\r\n    },\r\n    notify(color,msg){\r\n      this.$vs.notify({\r\n        title: '提示',\r\n        text: msg,\r\n        iconPack: 'feather',\r\n        icon: 'icon-alert-circle',\r\n        // color: 'danger'\r\n        color: color\r\n      })\r\n    },\r\n    //添加分组\r\n    addNewData() {\r\n      this.sidebarData = {};\r\n      this.toggleDataSidebar(true);\r\n    },\r\n    toggleDataSidebar(val = false) {\r\n      this.addNewDataSidebar = val;\r\n      this.getTask();\r\n    },\r\n    //修改\r\n    alter(id) {\r\n      console.log(id);\r\n    },\r\n    //删除\r\n    rem(id) {\r\n      console.log(id);\r\n    },\r\n  },\r\n  mounted(){\r\n    this.getTask();\r\n  }\r\n};\r\n",{"version":3,"sources":["GoogleMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GoogleMap.vue","sourceRoot":"src/views/charts-and-maps/maps/google-map","sourcesContent":["]<!-- =========================================================================================\r\n    File Name: Faq.vue\r\n    Description: FAQ Page\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n  <div>\r\n    <data-view-sidebar\r\n      :isSidebarActive=\"addNewDataSidebar\"\r\n      @closeSidebar=\"toggleDataSidebar\"\r\n      :data=\"sidebarData\"\r\n    />\r\n\r\n    <vx-card code-toggler>\r\n      <div class=\"vx-card p-6\">\r\n        <div class=\"flex flex-wrap items-center\">\r\n          <!-- <vs-button class=\"mb-4 md:mb-0\" @click=\"gridApi.exportDataAsCsv()\">Export as CSV</vs-button> -->\r\n          <vs-button @click=\"addNewData\">添加</vs-button>\r\n        </div>\r\n      </div>\r\n\r\n      <vs-table stripe :data=\"task\">\r\n        <template slot=\"thead\">\r\n          <vs-th>任务名称</vs-th>\r\n          <vs-th>任务描述</vs-th>\r\n          <vs-th>执行时间间隔</vs-th>\r\n          <vs-th>状态</vs-th>\r\n          <vs-th>添加时间</vs-th>\r\n          <vs-th>操作</vs-th>\r\n        </template>\r\n\r\n        <template slot-scope=\"{ data }\">\r\n          <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n            <vs-td>\r\n              {{ tr.name }}\r\n            </vs-td>\r\n            <vs-td>\r\n              {{ tr.num }}\r\n            </vs-td>\r\n            <vs-td>\r\n              {{ tr.min }} s ~ {{ tr.max }} s\r\n            </vs-td>\r\n             <vs-td>\r\n              <vs-switch v-model=\"tr.status\" @change.native=\"change(indextr)\"/>\r\n            </vs-td>\r\n            <vs-td>\r\n              {{ tr.create_time }}\r\n            </vs-td>\r\n            <vs-td>\r\n              <!-- <vs-button color=\"danger\" size=\"mini\" @click=\"rem(tr.id)\">删除</vs-button> -->\r\n              <div :style=\"{'direction': $vs.rtl ? 'rtl' : 'ltr'}\" style=\"display:flex;\">\r\n                <feather-icon icon=\"Edit3Icon\" svgClasses=\"h-5 w-5 mr-4 hover:text-primary cursor-pointer\" @click=\"toEdit(tr)\" />\r\n                <!-- <feather-icon icon=\"Trash2Icon\" svgClasses=\"h-5 w-5 hover:text-danger cursor-pointer\" @click=\"Delete(tr.id)\" /> -->\r\n                <!-- <div class=\"restart\" @click=\"restart(tr)\">重启</div> -->\r\n              </div>\r\n            </vs-td>\r\n          </vs-tr>\r\n        </template>\r\n      </vs-table>\r\n      <vs-pagination\r\n        :total=\"totalPages\"\r\n        :max=\"7\"\r\n        style=\"margin-top:15px;\"\r\n        v-model=\"currentPage\" />\r\n    </vx-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport DataViewSidebar from \"./DataViewSidebar.vue\";\r\nexport default {\r\n  components: {\r\n    DataViewSidebar,\r\n  },\r\n  data() {\r\n    return {\r\n      addNewDataSidebar: false,\r\n      sidebarData: {},\r\n      task: [],\r\n      currentPage:1,\r\n      pageSize:10,\r\n      total:0,\r\n      totalPages:1\r\n    };\r\n  },\r\n  computed: {},\r\n  methods: {\r\n    getTask(){\r\n      let _this = this;\r\n      _this.$axios({\r\n        url: \"/admin/Robot/getTask\",\r\n        method: \"post\",\r\n        data: {\r\n          page:_this.currentPage,\r\n          pageSize:_this.pageSize\r\n        }\r\n      }).then(res => {\r\n        if(res.data.status == 1){\r\n          _this.task = res.data.data.list;\r\n        }else{\r\n          _this.task = [];\r\n        }\r\n      })\r\n    },\r\n    toEdit(row){\r\n      this.addNewDataSidebar = true;\r\n      this.sidebarData = row;\r\n      console.log(row);\r\n    },\r\n    restart(row){\r\n      console.log(row);\r\n    },\r\n    change(index){\r\n      let _this = this;\r\n      _this.$axios({\r\n        url: \"/admin/Task/start\",\r\n        method: \"post\",\r\n        data:{\r\n          id:_this.task[index].id,\r\n          status:_this.task[index].status,\r\n          type:_this.task[index].type\r\n        }\r\n      }).then(res => {\r\n        if(res.data.status == 1){\r\n          \r\n        }else{\r\n          \r\n        }\r\n      })\r\n    },\r\n    notify(color,msg){\r\n      this.$vs.notify({\r\n        title: '提示',\r\n        text: msg,\r\n        iconPack: 'feather',\r\n        icon: 'icon-alert-circle',\r\n        // color: 'danger'\r\n        color: color\r\n      })\r\n    },\r\n    //添加分组\r\n    addNewData() {\r\n      this.sidebarData = {};\r\n      this.toggleDataSidebar(true);\r\n    },\r\n    toggleDataSidebar(val = false) {\r\n      this.addNewDataSidebar = val;\r\n      this.getTask();\r\n    },\r\n    //修改\r\n    alter(id) {\r\n      console.log(id);\r\n    },\r\n    //删除\r\n    rem(id) {\r\n      console.log(id);\r\n    },\r\n  },\r\n  mounted(){\r\n    this.getTask();\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.restart{\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"]}]}