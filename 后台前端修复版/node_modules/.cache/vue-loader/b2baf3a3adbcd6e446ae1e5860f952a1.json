{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\src\\App.vue","mtime":1664366069429},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1664268237683},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\babel-loader\\lib\\index.js","mtime":1663908471338},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\vue-loader\\lib\\index.js","mtime":1664268237964}],"contextDependencies":[],"result":["\r\nimport themeConfig from '@/../themeConfig.js'\r\nimport jwt         from '@/http/requests/auth/jwt/index.js'\r\n//测试\r\n//\r\nexport default {\r\n  data () {\r\n    return {\r\n      vueAppClasses: []\r\n    }\r\n  },\r\n  watch: {\r\n    '$store.state.theme' (val) {\r\n      this.toggleClassInBody(val)\r\n    },\r\n    '$vs.rtl' (val) {\r\n      document.documentElement.setAttribute('dir', val ? 'rtl' : 'ltr')\r\n    }\r\n  },\r\n  methods: {\r\n    toggleClassInBody (className) {\r\n      if (className === 'dark') {\r\n        if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark')\r\n        document.body.classList.add('theme-dark')\r\n      } else if (className === 'semi-dark') {\r\n        if (document.body.className.match('theme-dark')) document.body.classList.remove('theme-dark')\r\n        document.body.classList.add('theme-semi-dark')\r\n      } else {\r\n        if (document.body.className.match('theme-dark'))      document.body.classList.remove('theme-dark')\r\n        if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark')\r\n      }\r\n    },\r\n    setAppClasses (classesStr) {\r\n      this.vueAppClasses.push(classesStr)\r\n    },\r\n    handleWindowResize () {\r\n      this.$store.commit('UPDATE_WINDOW_WIDTH', window.innerWidth)\r\n\r\n      // Set --vh property\r\n      document.documentElement.style.setProperty('--vh', `${window.innerHeight * 0.01}px`)\r\n    },\r\n    handleScroll () {\r\n      this.$store.commit('UPDATE_WINDOW_SCROLL_Y', window.scrollY)\r\n    }\r\n  },\r\n  mounted () {\r\n    this.toggleClassInBody(themeConfig.theme)\r\n    this.$store.commit('UPDATE_WINDOW_WIDTH', window.innerWidth)\r\n\r\n    const vh = window.innerHeight * 0.01\r\n    // Then we set the value in the --vh custom property to the root of the document\r\n    document.documentElement.style.setProperty('--vh', `${vh}px`)\r\n  },\r\n  async created () {\r\n\r\n    // jwt\r\n    jwt.init()\r\n\r\n    const dir = this.$vs.rtl ? 'rtl' : 'ltr'\r\n    document.documentElement.setAttribute('dir', dir)\r\n\r\n    window.addEventListener('resize', this.handleWindowResize)\r\n    window.addEventListener('scroll', this.handleScroll)\r\n\r\n    // Auth0\r\n    try       { await this.$auth.renewTokens() } catch (e) { console.error(e) }\r\n\r\n  },\r\n  destroyed () {\r\n    window.removeEventListener('resize', this.handleWindowResize)\r\n    window.removeEventListener('scroll', this.handleScroll)\r\n  }\r\n}\r\n\r\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";AAiBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<!-- =========================================================================================\r\n  File Name: App.vue\r\n  Description: Main vue file - APP\r\n  ----------------------------------------------------------------------------------------\r\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n  Author: Pixinvent\r\n  Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n  <div id=\"app\" :class=\"vueAppClasses\" v-title data-title=\"盲盒后台管理\">\r\n    <router-view @setAppClasses=\"setAppClasses\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport themeConfig from '@/../themeConfig.js'\r\nimport jwt         from '@/http/requests/auth/jwt/index.js'\r\n//测试\r\n//\r\nexport default {\r\n  data () {\r\n    return {\r\n      vueAppClasses: []\r\n    }\r\n  },\r\n  watch: {\r\n    '$store.state.theme' (val) {\r\n      this.toggleClassInBody(val)\r\n    },\r\n    '$vs.rtl' (val) {\r\n      document.documentElement.setAttribute('dir', val ? 'rtl' : 'ltr')\r\n    }\r\n  },\r\n  methods: {\r\n    toggleClassInBody (className) {\r\n      if (className === 'dark') {\r\n        if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark')\r\n        document.body.classList.add('theme-dark')\r\n      } else if (className === 'semi-dark') {\r\n        if (document.body.className.match('theme-dark')) document.body.classList.remove('theme-dark')\r\n        document.body.classList.add('theme-semi-dark')\r\n      } else {\r\n        if (document.body.className.match('theme-dark'))      document.body.classList.remove('theme-dark')\r\n        if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark')\r\n      }\r\n    },\r\n    setAppClasses (classesStr) {\r\n      this.vueAppClasses.push(classesStr)\r\n    },\r\n    handleWindowResize () {\r\n      this.$store.commit('UPDATE_WINDOW_WIDTH', window.innerWidth)\r\n\r\n      // Set --vh property\r\n      document.documentElement.style.setProperty('--vh', `${window.innerHeight * 0.01}px`)\r\n    },\r\n    handleScroll () {\r\n      this.$store.commit('UPDATE_WINDOW_SCROLL_Y', window.scrollY)\r\n    }\r\n  },\r\n  mounted () {\r\n    this.toggleClassInBody(themeConfig.theme)\r\n    this.$store.commit('UPDATE_WINDOW_WIDTH', window.innerWidth)\r\n\r\n    const vh = window.innerHeight * 0.01\r\n    // Then we set the value in the --vh custom property to the root of the document\r\n    document.documentElement.style.setProperty('--vh', `${vh}px`)\r\n  },\r\n  async created () {\r\n\r\n    // jwt\r\n    jwt.init()\r\n\r\n    const dir = this.$vs.rtl ? 'rtl' : 'ltr'\r\n    document.documentElement.setAttribute('dir', dir)\r\n\r\n    window.addEventListener('resize', this.handleWindowResize)\r\n    window.addEventListener('scroll', this.handleScroll)\r\n\r\n    // Auth0\r\n    try       { await this.$auth.renewTokens() } catch (e) { console.error(e) }\r\n\r\n  },\r\n  destroyed () {\r\n    window.removeEventListener('resize', this.handleWindowResize)\r\n    window.removeEventListener('scroll', this.handleScroll)\r\n  }\r\n}\r\n\r\n</script>\r\n"]}]}