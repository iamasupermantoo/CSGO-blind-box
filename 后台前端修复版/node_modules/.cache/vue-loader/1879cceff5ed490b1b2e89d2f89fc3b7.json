{"remainingRequest":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\src\\views\\pages\\register\\RegisterJWT.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\src\\views\\pages\\register\\RegisterJWT.vue","mtime":1620826038000},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\babel-loader\\lib\\index.js","mtime":1663908471338},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\vue-loader\\lib\\index.js","mtime":1664268237964}],"contextDependencies":[],"result":["\r\nexport default {\r\n  data () {\r\n    return {\r\n      displayName: '',\r\n      email: '',\r\n      password: '',\r\n      confirm_password: '',\r\n      isTermsConditionAccepted: true\r\n    }\r\n  },\r\n  computed: {\r\n    validateForm () {\r\n      return !this.errors.any() && this.displayName !== '' && this.email !== '' && this.password !== '' && this.confirm_password !== '' && this.isTermsConditionAccepted === true\r\n    }\r\n  },\r\n  methods: {\r\n    checkLogin () {\r\n      // If user is already logged in notify\r\n      if (this.$store.state.auth.isUserLoggedIn()) {\r\n\r\n        // Close animation if passed as payload\r\n        // this.$vs.loading.close()\r\n\r\n        this.$vs.notify({\r\n          title: 'Login Attempt',\r\n          text: 'You are already logged in!',\r\n          iconPack: 'feather',\r\n          icon: 'icon-alert-circle',\r\n          color: 'warning'\r\n        })\r\n\r\n        return false\r\n      }\r\n      return true\r\n    },\r\n    registerUserJWt () {\r\n      // If form is not validated or user is already login return\r\n      if (!this.validateForm || !this.checkLogin()) return\r\n\r\n      const payload = {\r\n        userDetails: {\r\n          displayName: this.displayName,\r\n          email: this.email,\r\n          password: this.password,\r\n          confirmPassword: this.confirm_password\r\n        },\r\n        notify: this.$vs.notify\r\n      }\r\n      this.$store.dispatch('auth/registerUserJWT', payload)\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["RegisterJWT.vue"],"names":[],"mappings":";AAgEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RegisterJWT.vue","sourceRoot":"src/views/pages/register","sourcesContent":["<!-- =========================================================================================\r\nFile Name: RegisterJWT.vue\r\nDescription: Register Page for JWT\r\n----------------------------------------------------------------------------------------\r\nItem Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n  Author: Pixinvent\r\nAuthor URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n  <div class=\"clearfix\">\r\n    <vs-input\r\n      v-validate=\"'required|alpha_dash|min:3'\"\r\n      data-vv-validate-on=\"blur\"\r\n      label-placeholder=\"Name\"\r\n      name=\"displayName\"\r\n      placeholder=\"Name\"\r\n      v-model=\"displayName\"\r\n      class=\"w-full\" />\r\n    <span class=\"text-danger text-sm\">{{ errors.first('displayName') }}</span>\r\n\r\n    <vs-input\r\n      v-validate=\"'required|email'\"\r\n      data-vv-validate-on=\"blur\"\r\n      name=\"email\"\r\n      type=\"email\"\r\n      label-placeholder=\"Email\"\r\n      placeholder=\"Email\"\r\n      v-model=\"email\"\r\n      class=\"w-full mt-6\" />\r\n    <span class=\"text-danger text-sm\">{{ errors.first('email') }}</span>\r\n\r\n    <vs-input\r\n      ref=\"password\"\r\n      type=\"password\"\r\n      data-vv-validate-on=\"blur\"\r\n      v-validate=\"'required|min:6|max:10'\"\r\n      name=\"password\"\r\n      label-placeholder=\"Password\"\r\n      placeholder=\"Password\"\r\n      v-model=\"password\"\r\n      class=\"w-full mt-6\" />\r\n    <span class=\"text-danger text-sm\">{{ errors.first('password') }}</span>\r\n\r\n    <vs-input\r\n      type=\"password\"\r\n      v-validate=\"'min:6|max:10|confirmed:password'\"\r\n      data-vv-validate-on=\"blur\"\r\n      data-vv-as=\"password\"\r\n      name=\"confirm_password\"\r\n      label-placeholder=\"Confirm Password\"\r\n      placeholder=\"Confirm Password\"\r\n      v-model=\"confirm_password\"\r\n      class=\"w-full mt-6\" />\r\n    <span class=\"text-danger text-sm\">{{ errors.first('confirm_password') }}</span>\r\n\r\n    <vs-checkbox v-model=\"isTermsConditionAccepted\" class=\"mt-6\">I accept the terms & conditions.</vs-checkbox>\r\n    <vs-button  type=\"border\" to=\"/pages/login\" class=\"mt-6\">Login</vs-button>\r\n    <vs-button class=\"float-right mt-6\" @click=\"registerUserJWt\" :disabled=\"!validateForm\">Register</vs-button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      displayName: '',\r\n      email: '',\r\n      password: '',\r\n      confirm_password: '',\r\n      isTermsConditionAccepted: true\r\n    }\r\n  },\r\n  computed: {\r\n    validateForm () {\r\n      return !this.errors.any() && this.displayName !== '' && this.email !== '' && this.password !== '' && this.confirm_password !== '' && this.isTermsConditionAccepted === true\r\n    }\r\n  },\r\n  methods: {\r\n    checkLogin () {\r\n      // If user is already logged in notify\r\n      if (this.$store.state.auth.isUserLoggedIn()) {\r\n\r\n        // Close animation if passed as payload\r\n        // this.$vs.loading.close()\r\n\r\n        this.$vs.notify({\r\n          title: 'Login Attempt',\r\n          text: 'You are already logged in!',\r\n          iconPack: 'feather',\r\n          icon: 'icon-alert-circle',\r\n          color: 'warning'\r\n        })\r\n\r\n        return false\r\n      }\r\n      return true\r\n    },\r\n    registerUserJWt () {\r\n      // If form is not validated or user is already login return\r\n      if (!this.validateForm || !this.checkLogin()) return\r\n\r\n      const payload = {\r\n        userDetails: {\r\n          displayName: this.displayName,\r\n          email: this.email,\r\n          password: this.password,\r\n          confirmPassword: this.confirm_password\r\n        },\r\n        notify: this.$vs.notify\r\n      }\r\n      this.$store.dispatch('auth/registerUserJWT', payload)\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}