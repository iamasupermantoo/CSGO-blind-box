{"remainingRequest":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\src\\views\\apps\\calendar\\SimpleCalendar.vue?vue&type=style&index=0&id=5e9476c4&lang=scss&","dependencies":[{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\src\\views\\apps\\calendar\\SimpleCalendar.vue","mtime":1620826038000},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\css-loader\\index.js","mtime":1664268236894},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1664268237964},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\postcss-loader\\src\\index.js","mtime":1664268237567},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1664268245582},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\vue-loader\\lib\\index.js","mtime":1664268237964}],"contextDependencies":[],"result":["\r\n@import \"@/assets/scss/vuexy/apps/simple-calendar.scss\";\r\n",{"version":3,"sources":["SimpleCalendar.vue"],"names":[],"mappings":";AAkUA","file":"SimpleCalendar.vue","sourceRoot":"src/views/apps/calendar","sourcesContent":["<template>\r\n  <div id=\"simple-calendar-app\">\r\n    <div class=\"vx-card no-scroll-content\">\r\n      <calendar-view\r\n        ref=\"calendar\"\r\n        :displayPeriodUom=\"calendarView\"\r\n        :show-date=\"showDate\"\r\n        :events=\"simpleCalendarEvents\"\r\n        enableDragDrop\r\n        :eventTop=\"windowWidth <= 400 ? '2rem' : '3rem'\"\r\n        eventBorderHeight=\"0px\"\r\n        eventContentHeight=\"1.65rem\"\r\n        class=\"theme-default\"\r\n        @click-date=\"openAddNewEvent\"\r\n        @click-event=\"openEditEvent\"\r\n        @drop-on-date=\"eventDragged\">\r\n\r\n        <div slot=\"header\" class=\"mb-4\">\r\n\r\n          <div class=\"vx-row no-gutter\">\r\n\r\n            <!-- Month Name -->\r\n            <div class=\"vx-col w-1/3 items-center sm:flex hidden\">\r\n              <!-- Add new event button -->\r\n              <vs-button icon-pack=\"feather\" icon=\"icon-plus\" @click=\"promptAddNewEvent(new Date())\">Add</vs-button>\r\n            </div>\r\n\r\n            <!-- Current Month -->\r\n            <div class=\"vx-col sm:w-1/3 w-full sm:my-0 my-3 flex sm:justify-end justify-center order-last\">\r\n              <div class=\"flex items-center\">\r\n                <feather-icon\r\n                  :icon=\"$vs.rtl ? 'ChevronRightIcon' : 'ChevronLeftIcon'\"\r\n                  @click=\"updateMonth(-1)\"\r\n                  svgClasses=\"w-5 h-5 m-1\"\r\n                  class=\"cursor-pointer bg-primary text-white rounded-full\" />\r\n\r\n                <span class=\"mx-3 text-xl font-medium whitespace-no-wrap\">{{ showDate | month }}</span>\r\n\r\n                <feather-icon\r\n                  :icon=\"$vs.rtl ? 'ChevronLeftIcon' : 'ChevronRightIcon'\"\r\n                  @click=\"updateMonth(1)\"\r\n                  svgClasses=\"w-5 h-5 m-1\"\r\n                  class=\"cursor-pointer bg-primary text-white rounded-full\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"vx-col sm:w-1/3 w-full flex justify-center\">\r\n              <template v-for=\"(view, index) in calendarViewTypes\">\r\n                <vs-button\r\n                  v-if=\"calendarView === view.val\"\r\n                  :key=\"String(view.val) + 'filled'\"\r\n                  type=\"filled\"\r\n                  class=\"p-3 md:px-8 md:py-3\"\r\n                  :class=\"{'border-l-0 rounded-l-none': index, 'rounded-r-none': calendarViewTypes.length !== index+1}\"\r\n                  @click=\"calendarView = view.val\"\r\n                  >{{ view.label }}</vs-button>\r\n                <vs-button\r\n                  v-else\r\n                  :key=\"String(view.val) + 'border'\"\r\n                  type=\"border\"\r\n                  class=\"p-3 md:px-8 md:py-3\"\r\n                  :class=\"{'border-l-0 rounded-l-none': index, 'rounded-r-none': calendarViewTypes.length !== index+1}\"\r\n                  @click=\"calendarView = view.val\"\r\n                  >{{ view.label }}</vs-button>\r\n              </template>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"vx-row sm:flex hidden mt-4\">\r\n            <div class=\"vx-col w-full flex\">\r\n              <!-- Labels -->\r\n              <div class=\"flex flex-wrap sm:justify-start justify-center\">\r\n                  <div v-for=\"(label, index) in calendarLabels\" :key=\"index\" class=\"flex items-center mr-4 mb-2\">\r\n                      <div class=\"h-3 w-3 inline-block rounded-full mr-2\" :class=\"'bg-' + label.color\"></div>\r\n                      <span>{{ label.text }}</span>\r\n                  </div>\r\n                  <div class=\"flex items-center mr-4 mb-2\">\r\n                      <div class=\"h-3 w-3 inline-block rounded-full mr-2 bg-primary\"></div>\r\n                      <span>None</span>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </calendar-view>\r\n    </div>\r\n\r\n    <!-- ADD EVENT -->\r\n    <vs-prompt\r\n        class=\"calendar-event-dialog\"\r\n        title=\"Add Event\"\r\n        accept-text= \"Add Event\"\r\n        @accept=\"addEvent\"\r\n        :is-valid=\"validForm\"\r\n        :active.sync=\"activePromptAddEvent\">\r\n\r\n        <div class=\"calendar__label-container flex\">\r\n\r\n            <vs-chip v-if=\"labelLocal != 'none'\" class=\"text-white\" :class=\"'bg-' + labelColor(labelLocal)\">{{ labelLocal }}</vs-chip>\r\n\r\n            <vs-dropdown vs-custom-content vs-trigger-click class=\"ml-auto my-2 cursor-pointer\">\r\n\r\n                <feather-icon icon=\"TagIcon\" svgClasses=\"h-5 w-5\" class=\"cursor-pointer\" @click.prevent></feather-icon>\r\n\r\n                <vs-dropdown-menu style=\"z-index: 200001\">\r\n                        <vs-dropdown-item v-for=\"(label, index) in calendarLabels\" :key=\"index\" @click=\"labelLocal = label.value\">\r\n                            <div class=\"h-3 w-3 inline-block rounded-full mr-2\" :class=\"'bg-' + label.color\"></div>\r\n                            <span>{{ label.text }}</span>\r\n                        </vs-dropdown-item>\r\n\r\n                        <vs-dropdown-item @click=\"labelLocal = 'none'\">\r\n                            <div class=\"h-3 w-3 mr-1 inline-block rounded-full mr-2 bg-primary\"></div>\r\n                            <span>None</span>\r\n                        </vs-dropdown-item>\r\n                </vs-dropdown-menu>\r\n            </vs-dropdown>\r\n\r\n        </div>\r\n\r\n        <vs-input name=\"event-name\" v-validate=\"'required'\" class=\"w-full\" label-placeholder=\"Event Title\" v-model=\"title\"></vs-input>\r\n        <div class=\"my-4\">\r\n            <small class=\"date-label\">Start Date</small>\r\n            <datepicker :language=\"$vs.rtl ? langHe : langEn\" name=\"start-date\" v-model=\"startDate\" :disabled=\"disabledFrom\"></datepicker>\r\n        </div>\r\n        <div class=\"my-4\">\r\n            <small class=\"date-label\">End Date</small>\r\n            <datepicker :language=\"$vs.rtl ? langHe : langEn\" :disabledDates=\"disabledDatesTo\" name=\"end-date\" v-model=\"endDate\"></datepicker>\r\n        </div>\r\n        <vs-input name=\"event-url\" v-validate=\"'url'\" class=\"w-full mt-6\" label-placeholder=\"Event URL\" v-model=\"url\" :color=\"!errors.has('event-url') ? 'success' : 'danger'\"></vs-input>\r\n\r\n    </vs-prompt>\r\n\r\n    <!-- EDIT EVENT -->\r\n    <vs-prompt\r\n        class=\"calendar-event-dialog\"\r\n        title=\"Edit Event\"\r\n        accept-text= \"Submit\"\r\n        cancel-text = \"Remove\"\r\n        button-cancel = \"border\"\r\n        @cancel=\"removeEvent\"\r\n        @accept=\"editEvent\"\r\n        :is-valid=\"validForm\"\r\n        :active.sync=\"activePromptEditEvent\">\r\n\r\n        <div class=\"calendar__label-container flex\">\r\n\r\n            <vs-chip v-if=\"labelLocal != 'none'\" class=\"text-white\" :class=\"'bg-' + labelColor(labelLocal)\">{{ labelLocal }}</vs-chip>\r\n\r\n            <vs-dropdown vs-custom-content class=\"ml-auto my-2 cursor-pointer\">\r\n\r\n                <feather-icon icon=\"TagIcon\" svgClasses=\"h-5 w-5\" @click.prevent></feather-icon>\r\n\r\n                <vs-dropdown-menu style=\"z-index: 200001\">\r\n                        <vs-dropdown-item v-for=\"(label, index) in calendarLabels\" :key=\"index\" @click=\"labelLocal = label.value\">\r\n                            <div class=\"h-3 w-3 inline-block rounded-full mr-2\" :class=\"'bg-' + label.color\"></div>\r\n                            <span>{{ label.text }}</span>\r\n                        </vs-dropdown-item>\r\n\r\n                        <vs-dropdown-item @click=\"labelLocal = 'none'\">\r\n                            <div class=\"h-3 w-3 mr-1 inline-block rounded-full mr-2 bg-primary\"></div>\r\n                            <span>None</span>\r\n                        </vs-dropdown-item>\r\n                </vs-dropdown-menu>\r\n            </vs-dropdown>\r\n\r\n        </div>\r\n\r\n        <vs-input name=\"event-name\" v-validate=\"'required'\" class=\"w-full\" label-placeholder=\"Event Title\" v-model=\"title\"></vs-input>\r\n        <div class=\"my-4\">\r\n            <small class=\"date-label\">Start Date</small>\r\n            <datepicker :language=\"$vs.rtl ? langHe : langEn\" :disabledDates=\"disabledDatesFrom\" name=\"start-date\" v-model=\"startDate\"></datepicker>\r\n        </div>\r\n        <div class=\"my-4\">\r\n            <small class=\"date-label\">End Date</small>\r\n            <datepicker :language=\"$vs.rtl ? langHe : langEn\" :disabledDates=\"disabledDatesTo\" name=\"end-date\" v-model=\"endDate\"></datepicker>\r\n        </div>\r\n        <vs-input name=\"event-url\" v-validate=\"'url'\" class=\"w-full mt-6\" label-placeholder=\"Event URL\" v-model=\"url\" :color=\"!errors.has('event-url') ? 'success' : 'danger'\"></vs-input>\r\n\r\n    </vs-prompt>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { CalendarView, CalendarViewHeader } from 'vue-simple-calendar'\r\nimport moduleCalendar from '@/store/calendar/moduleCalendar.js'\r\nrequire('vue-simple-calendar/static/css/default.css')\r\n\r\nimport Datepicker from 'vuejs-datepicker'\r\nimport { en, he } from 'vuejs-datepicker/src/locale'\r\n\r\nexport default {\r\n  components: {\r\n    CalendarView,\r\n    CalendarViewHeader,\r\n    Datepicker\r\n  },\r\n  data () {\r\n    return {\r\n      showDate: new Date(),\r\n      disabledFrom: false,\r\n      id: 0,\r\n      title: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      labelLocal: 'none',\r\n\r\n      langHe: he,\r\n      langEn: en,\r\n\r\n      url: '',\r\n      calendarView: 'month',\r\n\r\n      activePromptAddEvent: false,\r\n      activePromptEditEvent: false,\r\n\r\n      calendarViewTypes: [\r\n        {\r\n          label: 'Month',\r\n          val: 'month'\r\n        },\r\n        {\r\n          label: 'Week',\r\n          val: 'week'\r\n        },\r\n        {\r\n          label: 'Year',\r\n          val: 'year'\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  computed: {\r\n    simpleCalendarEvents () {\r\n      return this.$store.state.calendar.events\r\n    },\r\n    validForm () {\r\n      return this.title !== '' && this.startDate !== '' && this.endDate !== '' && Date.parse(this.endDate) - Date.parse(this.startDate) >= 0 && !this.errors.has('event-url')\r\n    },\r\n    disabledDatesTo () {\r\n      return { to: new Date(this.startDate) }\r\n    },\r\n    disabledDatesFrom () {\r\n      return { from: new Date(this.endDate) }\r\n    },\r\n    calendarLabels () {\r\n      return this.$store.state.calendar.eventLabels\r\n    },\r\n    labelColor () {\r\n      return (label) => {\r\n        if      (label === 'business') return 'success'\r\n        else if (label === 'work')     return 'warning'\r\n        else if (label === 'personal') return 'danger'\r\n        else if (label === 'none')     return 'primary'\r\n      }\r\n    },\r\n    windowWidth () {\r\n      return this.$store.state.windowWidth\r\n    }\r\n  },\r\n  methods: {\r\n    addEvent () {\r\n      const obj = { title: this.title, startDate: this.startDate, endDate: this.endDate, label: this.labelLocal, url: this.url }\r\n      obj.classes = `event-${  this.labelColor(this.labelLocal)}`\r\n      this.$store.dispatch('calendar/addEvent', obj)\r\n    },\r\n    updateMonth (val) {\r\n      this.showDate = this.$refs.calendar.getIncrementedPeriod(val)\r\n    },\r\n    clearFields () {\r\n      this.title = this.endDate = this.url = ''\r\n      this.id = 0\r\n      this.labelLocal = 'none'\r\n    },\r\n    promptAddNewEvent (date) {\r\n      this.disabledFrom = false\r\n      this.addNewEventDialog(date)\r\n    },\r\n    addNewEventDialog (date) {\r\n      this.clearFields()\r\n      this.startDate = date\r\n      this.endDate = date\r\n      this.activePromptAddEvent = true\r\n    },\r\n    openAddNewEvent (date) {\r\n      this.disabledFrom = true\r\n      this.addNewEventDialog(date)\r\n    },\r\n    openEditEvent (event) {\r\n      const e = this.$store.getters['calendar/getEvent'](event.id)\r\n      this.id = e.id\r\n      this.title = e.title\r\n      this.startDate = e.startDate\r\n      this.endDate = e.endDate\r\n      this.url = e.url\r\n      this.labelLocal = e.label\r\n      this.activePromptEditEvent = true\r\n    },\r\n    editEvent () {\r\n      const obj = { id: this.id, title: this.title, startDate: this.startDate, endDate: this.endDate, label: this.labelLocal, url: this.url }\r\n      obj.classes = `event-${  this.labelColor(this.labelLocal)}`\r\n      this.$store.dispatch('calendar/editEvent', obj)\r\n    },\r\n    removeEvent () {\r\n      this.$store.dispatch('calendar/removeEvent', this.id)\r\n    },\r\n    eventDragged (event, date) {\r\n      this.$store.dispatch('calendar/eventDragged', {event, date})\r\n    }\r\n  },\r\n  created () {\r\n    this.$store.registerModule('calendar', moduleCalendar)\r\n    this.$store.dispatch('calendar/fetchEvents')\r\n    this.$store.dispatch('calendar/fetchEventLabels')\r\n  },\r\n  beforeDestroy () {\r\n    this.$store.unregisterModule('calendar')\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/vuexy/apps/simple-calendar.scss\";\r\n</style>\r\n"]}]}