{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\src\\views\\apps\\todo\\TodoAddNew.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\src\\views\\apps\\todo\\TodoAddNew.vue","mtime":1620826038000},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\babel-loader\\lib\\index.js","mtime":1663908471338},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\vue-loader\\lib\\index.js","mtime":1664268237964}],"contextDependencies":[],"result":["\r\nexport default {\r\n  data () {\r\n    return {\r\n      activePrompt: false,\r\n\r\n      taskLocal: {\r\n        title: '',\r\n        desc: '',\r\n        isCompleted: false,\r\n        isImportant: false,\r\n        isStarred: false,\r\n        tags: []\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    taskTags () {\r\n      return this.$store.state.todo.taskTags\r\n    },\r\n    validateForm () {\r\n      return !this.errors.any() && this.taskLocal.title !== ''\r\n    }\r\n  },\r\n  methods: {\r\n    clearFields () {\r\n      Object.assign(this.taskLocal, {\r\n        title: '',\r\n        desc: '',\r\n        isCompleted: false,\r\n        isImportant: false,\r\n        isStarred: false,\r\n        tags: []\r\n      })\r\n    },\r\n    addTodo () {\r\n      this.$validator.validateAll().then(result => {\r\n        if (result) {\r\n          this.$store.dispatch('todo/addTask', Object.assign({}, this.taskLocal))\r\n          this.clearFields()\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["TodoAddNew.vue"],"names":[],"mappings":";AA2DA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TodoAddNew.vue","sourceRoot":"src/views/apps/todo","sourcesContent":["<!-- =========================================================================================\r\n    File Name: TodoAddNew.vue\r\n    Description: Add new todo component\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n    <div class=\"px-6 pb-2 pt-6\">\r\n    <vs-button @click=\"activePrompt = true\" class=\"w-full\">Add Task</vs-button>\r\n    <vs-prompt\r\n        title=\"Add Task\"\r\n        accept-text= \"Add Task\"\r\n        button-cancel = \"border\"\r\n        @cancel=\"clearFields\"\r\n        @accept=\"addTodo\"\r\n        @close=\"clearFields\"\r\n        :is-valid=\"validateForm\"\r\n        :active.sync=\"activePrompt\">\r\n        <div>\r\n            <form>\r\n                <div class=\"vx-row\">\r\n\r\n                    <div class=\"vx-col ml-auto flex\">\r\n                        <feather-icon icon=\"InfoIcon\" class=\"cursor-pointer\" :svgClasses=\"[{'text-success stroke-current': taskLocal.isImportant}, 'w-5', 'h-5 mr-4']\" @click.prevent=\"taskLocal.isImportant = !taskLocal.isImportant\"></feather-icon>\r\n\r\n                        <feather-icon icon=\"StarIcon\" class=\"cursor-pointer\" :svgClasses=\"[{'text-warning stroke-current': taskLocal.isStarred}, 'w-5', 'h-5 mr-4']\" @click.prevent=\"taskLocal.isStarred = !taskLocal.isStarred\"></feather-icon>\r\n\r\n                        <vs-dropdown class=\"cursor-pointer flex\" vs-custom-content>\r\n\r\n                            <feather-icon icon=\"TagIcon\" svgClasses=\"h-5 w-5\" @click.prevent></feather-icon>\r\n                            <!-- <vs-button radius color=\"success\" type=\"flat\" iconPack=\"feather\" icon=\"icon-tag\" @click.prevent></vs-button> -->\r\n\r\n                            <vs-dropdown-menu style=\"z-index: 200001\">\r\n                                    <vs-dropdown-item @click.stop v-for=\"(tag, index) in taskTags\" :key=\"index\">\r\n                                        <vs-checkbox :vs-value=\"tag.value\" v-model=\"taskLocal.tags\">{{ tag.text }}</vs-checkbox>\r\n                                    </vs-dropdown-item>\r\n                            </vs-dropdown-menu>\r\n                        </vs-dropdown>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"vx-row\">\r\n                    <div class=\"vx-col w-full\">\r\n                        <vs-input v-validate=\"'required'\" name=\"title\" class=\"w-full mb-4 mt-5\" placeholder=\"Title\" v-model=\"taskLocal.title\" :color=\"validateForm ? 'success' : 'danger'\" />\r\n                        <vs-textarea rows=\"5\" label=\"Add description\" v-model=\"taskLocal.desc\" />\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    </vs-prompt>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      activePrompt: false,\r\n\r\n      taskLocal: {\r\n        title: '',\r\n        desc: '',\r\n        isCompleted: false,\r\n        isImportant: false,\r\n        isStarred: false,\r\n        tags: []\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    taskTags () {\r\n      return this.$store.state.todo.taskTags\r\n    },\r\n    validateForm () {\r\n      return !this.errors.any() && this.taskLocal.title !== ''\r\n    }\r\n  },\r\n  methods: {\r\n    clearFields () {\r\n      Object.assign(this.taskLocal, {\r\n        title: '',\r\n        desc: '',\r\n        isCompleted: false,\r\n        isImportant: false,\r\n        isStarred: false,\r\n        tags: []\r\n      })\r\n    },\r\n    addTodo () {\r\n      this.$validator.validateAll().then(result => {\r\n        if (result) {\r\n          this.$store.dispatch('todo/addTask', Object.assign({}, this.taskLocal))\r\n          this.clearFields()\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}