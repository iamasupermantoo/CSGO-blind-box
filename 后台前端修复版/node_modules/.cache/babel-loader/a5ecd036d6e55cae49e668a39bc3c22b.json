{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\src\\views\\apps\\email\\MailItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\src\\views\\apps\\email\\MailItem.vue","mtime":1620826038000},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\babel.config.js","mtime":1620826038000},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\babel-loader\\lib\\index.js","mtime":1663908471338},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\vue-loader\\lib\\index.js","mtime":1664268237964}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nexport default {\n  props: {\n    mail: {\n      type: Object,\n      required: true\n    },\n    isSelected: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      isSelectedMail: this.isSelected\n    };\n  },\n  watch: {\n    isSelected: function isSelected(value) {\n      this.isSelectedMail = value;\n    },\n    isSelectedMail: function isSelectedMail(val) {\n      val ? this.$emit('addToSelected', this.mail.id) : this.$emit('removeSelected', this.mail.id);\n    }\n  },\n  computed: {\n    labelColor: function labelColor() {\n      var _this = this;\n\n      return function (label) {\n        var tags = _this.$store.state.email.mailTags;\n        return tags.find(function (tag) {\n          return tag.value === label;\n        }).color;\n      };\n    }\n  },\n  methods: {\n    toggleIsStarred: function toggleIsStarred() {\n      var payload = {\n        mailId: this.mail.id,\n        value: !this.mail.isStarred\n      };\n      this.$store.dispatch('email/toggleIsMailStarred', payload);\n    }\n  }\n};",{"version":3,"mappings":";AAgDA;EACAA;IACAC;MACAC,YADA;MAEAC;IAFA,CADA;IAKAC;MACAF,aADA;MAEAC;IAFA;EALA,CADA;EAWAE,IAXA,kBAWA;IACA;MACAC;IADA;EAGA,CAfA;EAgBAC;IACAH,UADA,sBACAI,KADA,EACA;MACA;IACA,CAHA;IAIAF,cAJA,0BAIAG,GAJA,EAIA;MACAA;IACA;EANA,CAhBA;EAwBAC;IACAC,UADA,wBACA;MAAA;;MACA;QACA;QACA;UACA;QACA,CAFA,EAEAC,KAFA;MAGA,CALA;IAMA;EARA,CAxBA;EAkCAC;IACAC,eADA,6BACA;MACA;QAAAC;QAAAP;MAAA;MACA;IACA;EAJA;AAlCA","names":["props","mail","type","required","isSelected","data","isSelectedMail","watch","value","val","computed","labelColor","color","methods","toggleIsStarred","mailId"],"sourceRoot":"src/views/apps/email","sources":["MailItem.vue"],"sourcesContent":["<!-- =========================================================================================\r\n    File Name: MailItem.vue\r\n    Description: Mail Item - Displays mail item\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n<template>\r\n    <div class=\"mail__mail-item sm:px-4 px-2 py-6\" :class=\"{'mail__opened-mail': !mail.unread}\">\r\n\r\n        <!-- MAIL ROW 1 : META -->\r\n        <div class=\"flex w-full\">\r\n            <vs-avatar class=\"sender__avatar flex-shrink-0 mr-3 border-2 border-solid border-white\" :src=\"mail.img\" size=\"40px\"></vs-avatar>\r\n\r\n            <div class=\"flex w-full justify-between items-start\">\r\n                <div class=\"mail__details\">\r\n                    <h5 class=\"mb-1\" :class=\"{'font-semibold': mail.unread}\">{{ mail.sender_name }}</h5>\r\n                    <span v-if=\"mail.subject\">{{ mail.subject }}</span>\r\n                    <span v-else>(no subject)</span>\r\n                </div>\r\n\r\n                <div class=\"mail-item__meta flex items-center\">\r\n                    <div class=\"email__labels hidden sm:flex items-center\">\r\n                        <div class=\"h-2 w-2 rounded-full mr-2\" :class=\"'bg-' + labelColor(label)\" v-for=\"(label, index) in mail.labels\" :key=\"index\"></div>\r\n                    </div>\r\n                    <span>{{ mail.time | date }}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- /MAIL ROW 1 -->\r\n\r\n        <!-- MAIL ROW 2 : MSG & ACTIONS -->\r\n        <div class=\"flex w-full\">\r\n            <div class=\"flex items-center ml-1\">\r\n                <vs-checkbox v-model=\"isSelectedMail\" @click.stop class=\"vs-checkbox-small ml-0 mr-1\"></vs-checkbox>\r\n                <feather-icon icon=\"StarIcon\" class=\"cursor-pointer\" :svgClasses=\"[{'text-warning fill-current stroke-current': mail.isStarred}, 'w-5', 'h-5']\" @click.stop=\"toggleIsStarred\"></feather-icon>\r\n            </div>\r\n            <div class=\"mail__message truncate ml-3\">\r\n                <span>{{ mail.message | filter_tags }}</span>\r\n            </div>\r\n        </div>\r\n        <!-- /MAIL ROW 2 -->\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    mail: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    isSelected: {\r\n      type: Boolean,\r\n      required: true\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      isSelectedMail: this.isSelected\r\n    }\r\n  },\r\n  watch: {\r\n    isSelected (value) {\r\n      this.isSelectedMail = value\r\n    },\r\n    isSelectedMail (val) {\r\n      val ? this.$emit('addToSelected', this.mail.id) : this.$emit('removeSelected', this.mail.id)\r\n    }\r\n  },\r\n  computed: {\r\n    labelColor () {\r\n      return (label) => {\r\n        const tags = this.$store.state.email.mailTags\r\n        return tags.find((tag) => {\r\n          return tag.value === label\r\n        }).color\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    toggleIsStarred () {\r\n      const payload = { mailId: this.mail.id, value: !this.mail.isStarred }\r\n      this.$store.dispatch('email/toggleIsMailStarred', payload)\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n"]}]}