{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\src\\views\\forms\\form-wizard\\FormWizardValidation.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\src\\views\\forms\\form-wizard\\FormWizardValidation.vue","mtime":1620826038000},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\babel.config.js","mtime":1620826038000},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\babel-loader\\lib\\index.js","mtime":1663908471338},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\vue-loader\\lib\\index.js","mtime":1664268237964}],"contextDependencies":[],"result":["import { FormWizard, TabContent } from 'vue-form-wizard';\nimport 'vue-form-wizard/dist/vue-form-wizard.min.css'; // For custom error message\n\nimport { Validator } from 'vee-validate';\nvar dict = {\n  custom: {\n    first_name: {\n      required: 'First name is required',\n      alpha: 'First name may only contain alphabetic characters'\n    },\n    last_name: {\n      required: 'Last name is required',\n      alpha: 'Last name may only contain alphabetic characters'\n    },\n    email: {\n      required: 'Email is required',\n      email: 'Please enter valid email'\n    },\n    job_title: {\n      required: 'Job title name is required',\n      alpha: 'Job title may only contain alphabetic characters'\n    },\n    proposal_title: {\n      required: 'Proposal title name is required',\n      alpha: 'Proposal title may only contain alphabetic characters'\n    },\n    event_name: {\n      required: 'Event name is required',\n      alpha: 'Event name may only contain alphabetic characters'\n    }\n  }\n}; // register custom messages\n\nValidator.localize('en', dict);\nexport default {\n  data: function data() {\n    return {\n      firstName: '',\n      lastName: '',\n      email: '',\n      city: 'new-york',\n      proposalTitle: '',\n      jobTitle: '',\n      textarea: '',\n      eventName: '',\n      eventLocation: 'san-francisco',\n      status: 'plannning',\n      cityOptions: [{\n        text: 'New York',\n        value: 'new-york'\n      }, {\n        text: 'Chicago',\n        value: 'chicago'\n      }, {\n        text: 'San Francisco',\n        value: 'san-francisco'\n      }, {\n        text: 'Boston',\n        value: 'boston'\n      }],\n      statusOptions: [{\n        text: 'Plannning',\n        value: 'plannning'\n      }, {\n        text: 'In Progress',\n        value: 'in progress'\n      }, {\n        text: 'Finished',\n        value: 'finished'\n      }],\n      LocationOptions: [{\n        text: 'New York',\n        value: 'new-york'\n      }, {\n        text: 'Chicago',\n        value: 'chicago'\n      }, {\n        text: 'San Francisco',\n        value: 'san-francisco'\n      }, {\n        text: 'Boston',\n        value: 'boston'\n      }]\n    };\n  },\n  methods: {\n    validateStep1: function validateStep1() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.$validator.validateAll('step-1').then(function (result) {\n          if (result) {\n            resolve(true);\n          } else {\n            reject('correct all values');\n          }\n        });\n      });\n    },\n    validateStep2: function validateStep2() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this2.$validator.validateAll('step-2').then(function (result) {\n          if (result) {\n            resolve(true);\n          } else {\n            reject('correct all values');\n          }\n        });\n      });\n    },\n    validateStep3: function validateStep3() {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this3.$validator.validateAll('step-3').then(function (result) {\n          if (result) {\n            alert('Form submitted!');\n            resolve(true);\n          } else {\n            reject('correct all values');\n          }\n        });\n      });\n    }\n  },\n  components: {\n    FormWizard: FormWizard,\n    TabContent: TabContent\n  }\n};",{"version":3,"mappings":"AAmSA;AACA,sD,CAEA;;AACA;AACA;EACAA;IACAC;MACAC,kCADA;MAEAC;IAFA,CADA;IAKAC;MACAF,iCADA;MAEAC;IAFA,CALA;IASAE;MACAH,6BADA;MAEAG;IAFA,CATA;IAaAC;MACAJ,sCADA;MAEAC;IAFA,CAbA;IAiBAI;MACAL,2CADA;MAEAC;IAFA,CAjBA;IAqBAK;MACAN,kCADA;MAEAC;IAFA;EArBA;AADA,E,CA6BA;;AACAM;AAEA;EACAC,IADA,kBACA;IACA;MACAC,aADA;MAEAC,YAFA;MAGAP,SAHA;MAIAQ,gBAJA;MAKAC,iBALA;MAMAC,YANA;MAOAC,YAPA;MAQAC,aARA;MASAC,8BATA;MAUAC,mBAVA;MAWAC,cACA;QAAAC;QAAAC;MAAA,CADA,EAEA;QAAAD;QAAAC;MAAA,CAFA,EAGA;QAAAD;QAAAC;MAAA,CAHA,EAIA;QAAAD;QAAAC;MAAA,CAJA,CAXA;MAiBAC,gBACA;QAAAF;QAAAC;MAAA,CADA,EAEA;QAAAD;QAAAC;MAAA,CAFA,EAGA;QAAAD;QAAAC;MAAA,CAHA,CAjBA;MAsBAE,kBACA;QAAAH;QAAAC;MAAA,CADA,EAEA;QAAAD;QAAAC;MAAA,CAFA,EAGA;QAAAD;QAAAC;MAAA,CAHA,EAIA;QAAAD;QAAAC;MAAA,CAJA;IAtBA;EA6BA,CA/BA;EAgCAG;IACAC,aADA,2BACA;MAAA;;MACA;QACA;UACA;YACAC;UACA,CAFA,MAEA;YACAC;UACA;QACA,CANA;MAOA,CARA;IASA,CAXA;IAYAC,aAZA,2BAYA;MAAA;;MACA;QACA;UACA;YACAF;UACA,CAFA,MAEA;YACAC;UACA;QACA,CANA;MAOA,CARA;IASA,CAtBA;IAuBAE,aAvBA,2BAuBA;MAAA;;MACA;QACA;UACA;YACAC;YACAJ;UACA,CAHA,MAGA;YACAC;UACA;QACA,CAPA;MAQA,CATA;IAUA;EAlCA,CAhCA;EAoEAI;IACAC,sBADA;IAEAC;EAFA;AApEA","names":["custom","first_name","required","alpha","last_name","email","job_title","proposal_title","event_name","Validator","data","firstName","lastName","city","proposalTitle","jobTitle","textarea","eventName","eventLocation","status","cityOptions","text","value","statusOptions","LocationOptions","methods","validateStep1","resolve","reject","validateStep2","validateStep3","alert","components","FormWizard","TabContent"],"sourceRoot":"src/views/forms/form-wizard","sources":["FormWizardValidation.vue"],"sourcesContent":["<!-- =========================================================================================\r\n  File Name: FormWizardValidation.vue\r\n  Description: Form wizard with validation\r\n  ----------------------------------------------------------------------------------------\r\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n  Author: Pixinvent\r\n  Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n  <vx-card title=\"Form wizard with validation\" code-toggler>\r\n\r\n    <p>Implement Form validation with form wizard using popular <strong> <router-link to=\"/forms/form-validation\">VeeValidate</router-link></strong></p>\r\n\r\n    <div class=\"mt-5\">\r\n      <form-wizard color=\"rgba(var(--vs-primary), 1)\" errorColor=\"rgba(var(--vs-danger), 1)\" :title=\"null\" :subtitle=\"null\" finishButtonText=\"Submit\">\r\n        <tab-content title=\"Step 1\" class=\"mb-5\" icon=\"feather icon-home\" :before-change=\"validateStep1\">\r\n\r\n          <!-- tab 1 content -->\r\n          <form data-vv-scope=\"step-1\">\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col md:w-1/2 w-full mt-5\">\r\n              <vs-input label=\"First Name\" v-model=\"firstName\" class=\"w-full\" name=\"first_name\" v-validate=\"'required|alpha'\" />\r\n              <span class=\"text-danger\">{{ errors.first('step-1.first_name') }}</span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/2 w-full mt-5\">\r\n              <vs-input label=\"Last Name\"  v-model=\"lastName\" class=\"w-full\" name=\"last_name\" v-validate=\"'required|alpha'\" />\r\n              <span class=\"text-danger\">{{ errors.first('step-1.last_name') }}</span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/2 w-full mt-5\">\r\n              <vs-input type=\"email\" label=\"Email\"  v-model=\"email\" class=\"w-full\" name=\"email\" v-validate=\"'required|email'\" />\r\n              <span class=\"text-danger\">{{ errors.first('step-1.email') }}</span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/2 w-full mt-5\">\r\n              <vs-select v-model=\"city\" class=\"w-full select-large\" label=\"City\">\r\n                <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.text\" v-for=\"(item,index) in cityOptions\" class=\"w-full\" />\r\n              </vs-select>\r\n            </div>\r\n          </div>\r\n          </form>\r\n        </tab-content>\r\n\r\n        <!-- tab 2 content -->\r\n        <tab-content title=\"Step 2\" class=\"mb-5\" icon=\"feather icon-briefcase\" :before-change=\"validateStep2\">\r\n          <form data-vv-scope=\"step-2\">\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col md:w-1/2 w-full\">\r\n              <vs-input label=\"Proposal Title\" v-model=\"proposalTitle\" class=\"w-full mt-4\" name=\"proposal_title\" v-validate=\"'required|alpha_spaces'\" />\r\n              <span class=\"text-danger\">{{ errors.first('step-2.proposal_title') }}</span>\r\n\r\n              <vs-input label=\"Job Title\"  v-model=\"jobTitle\" class=\"w-full mt-4\" name=\"job_title\" v-validate=\"'required|alpha_spaces'\" />\r\n              <span class=\"text-danger\">{{ errors.first('step-2.job_title') }}</span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/2 w-full\">\r\n              <vs-textarea v-model=\"textarea\" label=\"Short discription\" class=\"md:mt-10 mt-6 mb-0\" rows=\"3\" />\r\n            </div>\r\n          </div>\r\n          </form>\r\n        </tab-content>\r\n\r\n        <!-- tab 3 content -->\r\n        <tab-content title=\"Step 3\" class=\"mb-5\" icon=\"feather icon-image\" :before-change=\"validateStep3\">\r\n          <form data-vv-scope=\"step-3\">\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col md:w-1/2 w-full\">\r\n              <vs-input label=\"Event Name\" v-model=\"eventName\" class=\"w-full mt-5\" name=\"event_name\" v-validate=\"'required|alpha_spaces'\" />\r\n              <span class=\"text-danger\">{{ errors.first('step-3.event_name') }}</span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/2 w-full\">\r\n              <vs-select v-model=\"city\" class=\"w-full select-large mt-5\" label=\"Event Location\">\r\n                <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.text\" v-for=\"(item,index) in cityOptions\" class=\"w-full\" />\r\n              </vs-select>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/2 w-full mt-5\">\r\n              <vs-select v-model=\"status\" class=\"w-full select-large\" label=\"Event Status\">\r\n                <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.text\" v-for=\"(item,index) in statusOptions\" class=\"w-full\" />\r\n              </vs-select>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/2 w-full md:mt-8\">\r\n              <div class=\"demo-alignment\">\r\n                <span>Requirements:</span>\r\n                <div class=\"flex\">\r\n                  <vs-checkbox>Staffing</vs-checkbox>\r\n                  <vs-checkbox>Catering</vs-checkbox>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </form>\r\n        </tab-content>\r\n      </form-wizard>\r\n    </div>\r\n\r\n    <template slot=\"codeContainer\">\r\n&lt;template&gt;\r\n  &lt;form-wizard color=&quot;rgba(var(--vs-primary), 1)&quot; errorColor=&quot;rgba(var(--vs-danger), 1)&quot; :title=&quot;null&quot; :subtitle=&quot;null&quot; finishButtonText=&quot;Submit&quot;&gt;\r\n    &lt;tab-content title=&quot;Step 1&quot; class=&quot;mb-5&quot; icon=&quot;feather icon-home&quot; :before-change=&quot;validateStep1&quot;&gt;\r\n\r\n      &lt;!-- tab 1 content --&gt;\r\n      &lt;form data-vv-scope=&quot;step-1&quot;&gt;\r\n      &lt;div class=&quot;vx-row&quot;&gt;\r\n        &lt;div class=&quot;vx-col md:w-1/2 w-full mt-5&quot;&gt;\r\n          &lt;vs-input label=&quot;First Name&quot; v-model=&quot;firstName&quot; class=&quot;w-full&quot; name=&quot;first_name&quot; v-validate=&quot;'required|alpha'&quot; /&gt;\r\n          &lt;span class=&quot;text-danger&quot;&gt;{{ errors.first('step-1.first_name') }}&lt;/span&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=&quot;vx-col md:w-1/2 w-full mt-5&quot;&gt;\r\n          &lt;vs-input label=&quot;Last Name&quot;  v-model=&quot;lastName&quot; class=&quot;w-full&quot; name=&quot;last_name&quot; v-validate=&quot;'required|alpha'&quot; /&gt;\r\n          &lt;span class=&quot;text-danger&quot;&gt;{{ errors.first('step-1.last_name') }}&lt;/span&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=&quot;vx-col md:w-1/2 w-full mt-5&quot;&gt;\r\n          &lt;vs-input type=&quot;email&quot; label=&quot;Email&quot;  v-model=&quot;email&quot; class=&quot;w-full&quot; name=&quot;email&quot; v-validate=&quot;'required|email'&quot; /&gt;\r\n          &lt;span class=&quot;text-danger&quot;&gt;{{ errors.first('step-1.email') }}&lt;/span&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=&quot;vx-col md:w-1/2 w-full mt-5&quot;&gt;\r\n          &lt;vs-select v-model=&quot;city&quot; class=&quot;w-full select-large&quot; label=&quot;City&quot;&gt;\r\n            &lt;vs-select-item :key=&quot;index&quot; :value=&quot;item.value&quot; :text=&quot;item.text&quot; v-for=&quot;(item,index) in cityOptions&quot; class=&quot;w-full&quot; /&gt;\r\n          &lt;/vs-select&gt;\r\n        &lt;/div&gt;\r\n      &lt;/div&gt;\r\n      &lt;/form&gt;\r\n    &lt;/tab-content&gt;\r\n\r\n    &lt;!-- tab 2 content --&gt;\r\n    &lt;tab-content title=&quot;Step 2&quot; class=&quot;mb-5&quot; icon=&quot;feather icon-briefcase&quot; :before-change=&quot;validateStep2&quot;&gt;\r\n      &lt;form data-vv-scope=&quot;step-2&quot;&gt;\r\n      &lt;div class=&quot;vx-row&quot;&gt;\r\n        &lt;div class=&quot;vx-col md:w-1/2 w-full&quot;&gt;\r\n          &lt;vs-input label=&quot;Proposal Title&quot; v-model=&quot;proposalTitle&quot; class=&quot;w-full mt-4&quot; name=&quot;proposal_title&quot; v-validate=&quot;'required|alpha_spaces'&quot; /&gt;\r\n          &lt;span class=&quot;text-danger&quot;&gt;{{ errors.first('step-2.proposal_title') }}&lt;/span&gt;\r\n\r\n          &lt;vs-input label=&quot;Job Title&quot;  v-model=&quot;jobTitle&quot; class=&quot;w-full mt-4&quot; name=&quot;job_title&quot; v-validate=&quot;'required|alpha_spaces'&quot; /&gt;\r\n          &lt;span class=&quot;text-danger&quot;&gt;{{ errors.first('step-2.job_title') }}&lt;/span&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=&quot;vx-col md:w-1/2 w-full&quot;&gt;\r\n          &lt;vs-textarea v-model=&quot;textarea&quot; label=&quot;Short discription&quot; class=&quot;md:mt-10 mt-6 mb-0&quot; rows=&quot;3&quot; /&gt;\r\n        &lt;/div&gt;\r\n      &lt;/div&gt;\r\n      &lt;/form&gt;\r\n    &lt;/tab-content&gt;\r\n\r\n    &lt;!-- tab 3 content --&gt;\r\n    &lt;tab-content title=&quot;Step 3&quot; class=&quot;mb-5&quot; icon=&quot;feather icon-image&quot; :before-change=&quot;validateStep3&quot;&gt;\r\n      &lt;form data-vv-scope=&quot;step-3&quot;&gt;\r\n      &lt;div class=&quot;vx-row&quot;&gt;\r\n        &lt;div class=&quot;vx-col md:w-1/2 w-full&quot;&gt;\r\n          &lt;vs-input label=&quot;Event Name&quot; v-model=&quot;eventName&quot; class=&quot;w-full mt-5&quot; name=&quot;event_name&quot; v-validate=&quot;'required|alpha_spaces'&quot; /&gt;\r\n          &lt;span class=&quot;text-danger&quot;&gt;{{ errors.first('step-3.event_name') }}&lt;/span&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=&quot;vx-col md:w-1/2 w-full&quot;&gt;\r\n          &lt;vs-select v-model=&quot;city&quot; class=&quot;w-full select-large mt-5&quot; label=&quot;Event Location&quot;&gt;\r\n            &lt;vs-select-item :key=&quot;index&quot; :value=&quot;item.value&quot; :text=&quot;item.text&quot; v-for=&quot;(item,index) in cityOptions&quot; class=&quot;w-full&quot; /&gt;\r\n          &lt;/vs-select&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=&quot;vx-col md:w-1/2 w-full mt-5&quot;&gt;\r\n          &lt;vs-select v-model=&quot;status&quot; class=&quot;w-full select-large&quot; label=&quot;Event Status&quot;&gt;\r\n            &lt;vs-select-item :key=&quot;index&quot; :value=&quot;item.value&quot; :text=&quot;item.text&quot; v-for=&quot;(item,index) in statusOptions&quot; class=&quot;w-full&quot; /&gt;\r\n          &lt;/vs-select&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=&quot;vx-col md:w-1/2 w-full md:mt-8&quot;&gt;\r\n          &lt;div class=&quot;demo-alignment&quot;&gt;\r\n            &lt;span&gt;Requirements:&lt;/span&gt;\r\n            &lt;div class=&quot;flex&quot;&gt;\r\n              &lt;vs-checkbox&gt;Staffing&lt;/vs-checkbox&gt;\r\n              &lt;vs-checkbox&gt;Catering&lt;/vs-checkbox&gt;\r\n            &lt;/div&gt;\r\n          &lt;/div&gt;\r\n        &lt;/div&gt;\r\n      &lt;/div&gt;\r\n      &lt;/form&gt;\r\n    &lt;/tab-content&gt;\r\n  &lt;/form-wizard&gt;\r\n&lt;/template&gt;\r\n\r\n&lt;script&gt;\r\nimport { FormWizard, TabContent } from 'vue-form-wizard'\r\nimport 'vue-form-wizard/dist/vue-form-wizard.min.css'\r\n\r\n// For custom error message\r\nimport { Validator } from 'vee-validate';\r\nconst dict = {\r\n  custom: {\r\n    first_name: {\r\n      required: 'First name is required',\r\n      alpha: &quot;First name may only contain alphabetic characters&quot;\r\n    },\r\n    last_name: {\r\n      required: 'Last name is required',\r\n      alpha: &quot;Last name may only contain alphabetic characters&quot;\r\n    },\r\n    email: {\r\n      required: 'Email is required',\r\n      email: &quot;Please enter valid email&quot;\r\n    },\r\n    job_title: {\r\n      required: 'Job title name is required',\r\n      alpha: &quot;Job title may only contain alphabetic characters&quot;\r\n    },\r\n    proposal_title: {\r\n      required: 'Proposal title name is required',\r\n      alpha: &quot;Proposal title may only contain alphabetic characters&quot;\r\n    },\r\n    event_name: {\r\n      required: 'Event name is required',\r\n      alpha: &quot;Event name may only contain alphabetic characters&quot;\r\n    },\r\n  }\r\n};\r\n\r\n// register custom messages\r\nValidator.localize('en', dict);\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      firstName: &quot;&quot;,\r\n      lastName: &quot;&quot;,\r\n      email: &quot;&quot;,\r\n      city: &quot;new-york&quot;,\r\n      proposalTitle: &quot;&quot;,\r\n      jobTitle: &quot;&quot;,\r\n      textarea: &quot;&quot;,\r\n      eventName: &quot;&quot;,\r\n      eventLocation: &quot;san-francisco&quot;,\r\n      status: &quot;plannning&quot;,\r\n      cityOptions: [\r\n        { text: &quot;New York&quot;, value: &quot;new-york&quot; },\r\n        { text: &quot;Chicago&quot;, value: &quot;chicago&quot; },\r\n        { text: &quot;San Francisco&quot;, value: &quot;san-francisco&quot; },\r\n        { text: &quot;Boston&quot;, value: &quot;boston&quot; },\r\n      ],\r\n      statusOptions: [\r\n        { text: &quot;Plannning&quot;, value: &quot;plannning&quot; },\r\n        { text: &quot;In Progress&quot;, value: &quot;in progress&quot; },\r\n        { text: &quot;Finished&quot;, value: &quot;finished&quot; },\r\n      ],\r\n      LocationOptions: [\r\n        { text: &quot;New York&quot;, value: &quot;new-york&quot; },\r\n        { text: &quot;Chicago&quot;, value: &quot;chicago&quot; },\r\n        { text: &quot;San Francisco&quot;, value: &quot;san-francisco&quot; },\r\n        { text: &quot;Boston&quot;, value: &quot;boston&quot; },\r\n      ],\r\n    }\r\n  },\r\n  methods: {\r\n    validateStep1() {\r\n      return new Promise((resolve, reject) =&gt; {\r\n        this.$validator.validateAll('step-1').then(result =&gt; {\r\n          if (result) {\r\n            resolve(true)\r\n          } else {\r\n            reject(&quot;correct all values&quot;);\r\n          }\r\n        })\r\n      })\r\n    },\r\n    validateStep2() {\r\n      return new Promise((resolve, reject) =&gt; {\r\n        this.$validator.validateAll(&quot;step-2&quot;).then(result =&gt; {\r\n          if (result) {\r\n            resolve(true)\r\n          } else {\r\n            reject(&quot;correct all values&quot;);\r\n          }\r\n        })\r\n      })\r\n    },\r\n    validateStep3() {\r\n      return new Promise((resolve, reject) =&gt; {\r\n        this.$validator.validateAll(&quot;step-3&quot;).then(result =&gt; {\r\n          if (result) {\r\n            alert(&quot;Form submitted!&quot;);\r\n            resolve(true)\r\n          } else {\r\n            reject(&quot;correct all values&quot;);\r\n          }\r\n        })\r\n      })\r\n    }\r\n  },\r\n  components: {\r\n    FormWizard,\r\n    TabContent\r\n  }\r\n}\r\n&lt;/script&gt;\r\n    </template>\r\n  </vx-card>\r\n</template>\r\n\r\n<script>\r\nimport { FormWizard, TabContent } from 'vue-form-wizard'\r\nimport 'vue-form-wizard/dist/vue-form-wizard.min.css'\r\n\r\n// For custom error message\r\nimport { Validator } from 'vee-validate'\r\nconst dict = {\r\n  custom: {\r\n    first_name: {\r\n      required: 'First name is required',\r\n      alpha: 'First name may only contain alphabetic characters'\r\n    },\r\n    last_name: {\r\n      required: 'Last name is required',\r\n      alpha: 'Last name may only contain alphabetic characters'\r\n    },\r\n    email: {\r\n      required: 'Email is required',\r\n      email: 'Please enter valid email'\r\n    },\r\n    job_title: {\r\n      required: 'Job title name is required',\r\n      alpha: 'Job title may only contain alphabetic characters'\r\n    },\r\n    proposal_title: {\r\n      required: 'Proposal title name is required',\r\n      alpha: 'Proposal title may only contain alphabetic characters'\r\n    },\r\n    event_name: {\r\n      required: 'Event name is required',\r\n      alpha: 'Event name may only contain alphabetic characters'\r\n    }\r\n  }\r\n}\r\n\r\n// register custom messages\r\nValidator.localize('en', dict)\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      city: 'new-york',\r\n      proposalTitle: '',\r\n      jobTitle: '',\r\n      textarea: '',\r\n      eventName: '',\r\n      eventLocation: 'san-francisco',\r\n      status: 'plannning',\r\n      cityOptions: [\r\n        { text: 'New York', value: 'new-york' },\r\n        { text: 'Chicago', value: 'chicago' },\r\n        { text: 'San Francisco', value: 'san-francisco' },\r\n        { text: 'Boston', value: 'boston' }\r\n      ],\r\n      statusOptions: [\r\n        { text: 'Plannning', value: 'plannning' },\r\n        { text: 'In Progress', value: 'in progress' },\r\n        { text: 'Finished', value: 'finished' }\r\n      ],\r\n      LocationOptions: [\r\n        { text: 'New York', value: 'new-york' },\r\n        { text: 'Chicago', value: 'chicago' },\r\n        { text: 'San Francisco', value: 'san-francisco' },\r\n        { text: 'Boston', value: 'boston' }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    validateStep1 () {\r\n      return new Promise((resolve, reject) => {\r\n        this.$validator.validateAll('step-1').then(result => {\r\n          if (result) {\r\n            resolve(true)\r\n          } else {\r\n            reject('correct all values')\r\n          }\r\n        })\r\n      })\r\n    },\r\n    validateStep2 () {\r\n      return new Promise((resolve, reject) => {\r\n        this.$validator.validateAll('step-2').then(result => {\r\n          if (result) {\r\n            resolve(true)\r\n          } else {\r\n            reject('correct all values')\r\n          }\r\n        })\r\n      })\r\n    },\r\n    validateStep3 () {\r\n      return new Promise((resolve, reject) => {\r\n        this.$validator.validateAll('step-3').then(result => {\r\n          if (result) {\r\n            alert('Form submitted!')\r\n            resolve(true)\r\n          } else {\r\n            reject('correct all values')\r\n          }\r\n        })\r\n      })\r\n    }\r\n  },\r\n  components: {\r\n    FormWizard,\r\n    TabContent\r\n  }\r\n}\r\n</script>\r\n"]}]}