{"remainingRequest":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\babel-loader\\lib\\index.js!D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\src\\components\\vx-auto-suggest\\VxAutoSuggest.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\src\\components\\vx-auto-suggest\\VxAutoSuggest.vue","mtime":1620826038000},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\babel.config.js","mtime":1620826038000},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\babel-loader\\lib\\index.js","mtime":1663908471338},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\vue-loader\\lib\\index.js","mtime":1664268237964}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport _defineProperty from \"D:/Program Files (x86)/wechat/WeChat Files/wxid_ue0ca48wn2m522/FileStorage/File/2022-09/\\u76F2\\u76D2\\u6E90\\u7801/\\u540E\\u53F0\\u524D\\u7AEF/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es7.object.entries\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport \"core-js/modules/es6.array.filter\";\nimport _slicedToArray from \"D:/Program Files (x86)/wechat/WeChat Files/wxid_ue0ca48wn2m522/FileStorage/File/2022-09/\\u76F2\\u76D2\\u6E90\\u7801/\\u540E\\u53F0\\u524D\\u7AEF/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/es6.array.some\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nexport default {\n  props: {\n    placeholder: {\n      type: String,\n      default: 'Search..'\n    },\n    data: {\n      type: Object,\n      required: true\n    },\n    initalData: {\n      type: Object,\n      default: function _default() {\n        return new Object();\n      }\n    },\n    inputClassses: {\n      type: [String, Object, Array]\n    },\n    autoFocus: {\n      type: Boolean,\n      default: false\n    },\n    showPinned: {\n      type: Boolean,\n      default: false\n    },\n    searchLimit: {\n      type: Number,\n      default: 4\n    },\n    hideGroupTitle: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      searchQuery: '',\n      filteredData: {},\n      currentSelected: -1,\n      inputFocused: false,\n      insideSuggestions: false\n    };\n  },\n  watch: {\n    // UPDATE SUGGESTIONS LIST\n    searchQuery: function searchQuery(val) {\n      var _this = this;\n\n      this.$emit('input', val);\n\n      if (val === '') {\n        this.inputInit();\n      } else {\n        var queried_data = {};\n        var data_grps = Object.keys(this.data);\n        data_grps.forEach(function (grp, i) {\n          queried_data[data_grps[i]] = _this.filter_grp(_this.data[grp]);\n        }); // Check if any of group has at least one queried item\n\n        if (!Object.values(queried_data).some(function (obj) {\n          return obj.length;\n        })) {\n          this.currentSelected = -1;\n        }\n\n        this.filteredData = queried_data;\n      }\n    },\n    autoFocus: function autoFocus(val) {\n      if (val) this.focusInput();else this.searchQuery = '';\n    },\n    filteredData: function filteredData(val) {\n      // Auto Select first item if it's not item-404\n      var grp_index = null;\n\n      var _iterator = _createForOfIteratorHelper(Object.values(val).entries()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              index = _step$value[0],\n              grp_suggestions = _step$value[1];\n\n          if (grp_suggestions.length) {\n            grp_index = index;\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (grp_index !== null) this.currentSelected = \"\".concat(grp_index, \".0\");\n    }\n  },\n  methods: {\n    escPressed: function escPressed() {\n      this.$emit('closeSearchbar');\n      this.searchQuery = '';\n    },\n    filter_grp: function filter_grp(grp) {\n      var _this2 = this;\n\n      var exactEle = grp.data.filter(function (item) {\n        return item[grp.key].toLowerCase().startsWith(_this2.searchQuery.toLowerCase());\n      });\n      var containEle = grp.data.filter(function (item) {\n        return !item[grp.key].toLowerCase().startsWith(_this2.searchQuery.toLowerCase()) && item[grp.key].toLowerCase().indexOf(_this2.searchQuery.toLowerCase()) > -1;\n      });\n      return exactEle.concat(containEle).slice(0, this.searchLimit);\n    },\n    inputInit: function inputInit() {\n      if (Object.entries(this.initalData).length === 0 && this.initalData.constructor === Object) {\n        this.filteredData = {};\n      } else {\n        this.filteredData = this.initalData;\n      }\n    },\n    updateInputFocus: function updateInputFocus() {\n      var _this3 = this;\n\n      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (val) {\n        if (this.searchQuery === '') this.inputInit();\n        setTimeout(function () {\n          _this3.inputFocused = true;\n        }, 100);\n      } else {\n        if (this.insideSuggestions) return;\n        setTimeout(function () {\n          _this3.inputFocused = false;\n        }, 100);\n        this.escPressed();\n      }\n    },\n    suggestionSelected: function suggestionSelected() {\n      if (this.currentSelected > -1) {\n        var _this$currentSelected = this.currentSelected.split('.'),\n            _this$currentSelected2 = _slicedToArray(_this$currentSelected, 2),\n            grp_index = _this$currentSelected2[0],\n            item_index = _this$currentSelected2[1];\n\n        var grp_of_selected_item = Object.keys(this.data)[grp_index];\n        var selected_item = this.filteredData[grp_of_selected_item][item_index];\n        this.$emit('selected', _defineProperty({}, grp_of_selected_item, selected_item));\n        this.searchQuery = '';\n      }\n    },\n    increaseIndex: function increaseIndex() {\n      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      /* eslint-disable no-lonely-if */\n      // If there's no matching items\n      if (!Object.values(this.filteredData).some(function (grp_items) {\n        return grp_items.length;\n      })) return;\n\n      var _this$currentSelected3 = this.currentSelected.split('.'),\n          _this$currentSelected4 = _slicedToArray(_this$currentSelected3, 2),\n          grp_i = _this$currentSelected4[0],\n          item_i = _this$currentSelected4[1];\n\n      var grp_arr = Object.entries(this.filteredData);\n      var active_grp_total_items = grp_arr[grp_i][1].length;\n\n      if (val) {\n        // If active item is not of last item in grp\n        if (active_grp_total_items - 1 > item_i) {\n          this.currentSelected = \"\".concat(grp_i, \".\").concat(Number(item_i) + 1); // If active item grp is not last in grp list\n        } else if (grp_i < grp_arr.length - 1) {\n          for (var i = Number(grp_i) + 1; i < grp_arr.length; i++) {\n            // If navigating group have items => Then move in that group\n            if (grp_arr[i][1].length > 0) {\n              this.currentSelected = \"\".concat(Number(i), \".0\");\n              break;\n            }\n          }\n        }\n      } else {\n        // If active item is not of first item in grp\n        if (Number(item_i)) {\n          this.currentSelected = \"\".concat(grp_i, \".\").concat(Number(item_i) - 1); // If active item grp  is not first in grp list\n        } else if (Number(grp_i)) {\n          for (var _i = Number(grp_i) - 1; _i >= 0; _i--) {\n            // If navigating group have items => Then move in that group\n            if (grp_arr[_i][1].length > 0) {\n              this.currentSelected = \"\".concat(_i, \".\").concat(grp_arr[_i][1].length - 1);\n              break;\n            }\n          }\n        }\n      }\n      /* eslint-enable no-lonely-if */\n\n    },\n    focusInput: function focusInput() {\n      this.$refs.input.$el.querySelector('input').focus();\n    }\n  },\n  mounted: function mounted() {\n    if (this.autoFocus) this.focusInput();\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;EACAA;IACAC;MACAC,YADA;MAEAC;IAFA,CADA;IAKAC;MACAF,YADA;MAEAG;IAFA,CALA;IASAC;MACAJ,YADA;MAEAC;QAAA;MAAA;IAFA,CATA;IAaAI;MACAL;IADA,CAbA;IAgBAM;MACAN,aADA;MAEAC;IAFA,CAhBA;IAoBAM;MACAP,aADA;MAEAC;IAFA,CApBA;IAwBAO;MACAR,YADA;MAEAC;IAFA,CAxBA;IA4BAQ;MACAT,aADA;MAEAC;IAFA;EA5BA,CADA;EAkCAC,IAlCA,kBAkCA;IACA;MACAQ,eADA;MAEAC,gBAFA;MAGAC,mBAHA;MAIAC,mBAJA;MAKAC;IALA;EAOA,CA1CA;EA2CAC;IACA;IACAL,WAFA,uBAEAM,GAFA,EAEA;MAAA;;MACA;;MAEA;QACA;MACA,CAFA,MAEA;QACA;QACA;QAEAC;UACAC;QACA,CAFA,EAJA,CAQA;;QACA;UAAA;QAAA;UACA;QACA;;QAEA;MACA;IACA,CAtBA;IAuBAZ,SAvBA,qBAuBAU,GAvBA,EAuBA;MACA,gCACA;IACA,CA1BA;IA2BAL,YA3BA,wBA2BAK,GA3BA,EA2BA;MACA;MACA;;MAFA,2CAIAG,4BAJA;MAAA;;MAAA;QAIA;UAAA;UAAA;UAAA;;UACA;YACAC;YACA;UACA;QACA;MATA;QAAA;MAAA;QAAA;MAAA;;MAWA;IACA;EAvCA,CA3CA;EAoFAC;IACAC,UADA,wBACA;MACA;MACA;IACA,CAJA;IAKAC,UALA,sBAKAC,GALA,EAKA;MAAA;;MACA;QACA;MACA,CAFA;MAGA;QACA;MACA,CAFA;MAGA;IACA,CAbA;IAcAC,SAdA,uBAcA;MACA;QACA;MACA,CAFA,MAEA;QACA;MACA;IACA,CApBA;IAqBAC,gBArBA,8BAqBA;MAAA;;MAAA;;MACA;QACA;QACAC;UACA;QACA,CAFA,EAEA,GAFA;MAGA,CALA,MAKA;QACA;QACAA;UACA;QACA,CAFA,EAEA,GAFA;QAGA;MACA;IACA,CAlCA;IAmCAC,kBAnCA,gCAmCA;MACA;QAEA;QAAA;QAAA;QAAA;;QAEA;QACA;QAEA;QAEA;MACA;IACA,CA/CA;IAgDAC,aAhDA,2BAgDA;MAAA;;MAEA;MAEA;MACA;QAAA;MAAA;;MAEA;MAAA;MAAA;MAAA;;MAEA;MACA;;MAEA;QACA;QACA;UACA,wEADA,CAGA;QACA,CAJA,MAIA;UAEA;YAEA;YACA;cACA;cACA;YACA;UACA;QACA;MACA,CAjBA,MAiBA;QACA;QACA;UACA,wEADA,CAGA;QACA,CAJA,MAIA;UAEA;YAEA;YACA;cACA;cACA;YACA;UACA;QACA;MACA;MACA;;IACA,CAhGA;IAiGAC,UAjGA,wBAiGA;MACA;IACA;EAnGA,CApFA;EAyLAC,OAzLA,qBAyLA;IACA;EACA;AA3LA","names":["props","placeholder","type","default","data","required","initalData","inputClassses","autoFocus","showPinned","searchLimit","hideGroupTitle","searchQuery","filteredData","currentSelected","inputFocused","insideSuggestions","watch","val","data_grps","queried_data","Object","grp_index","methods","escPressed","filter_grp","grp","inputInit","updateInputFocus","setTimeout","suggestionSelected","increaseIndex","focusInput","mounted"],"sourceRoot":"src/components/vx-auto-suggest","sources":["VxAutoSuggest.vue"],"sourcesContent":["<template>\r\n  <div class=\"vx-auto-suggest\">\r\n    <div class=\"flex items-center relative\">\r\n\r\n      <!-- Input -->\r\n      <vs-input\r\n        ref=\"input\"\r\n        :placeholder=\"placeholder\"\r\n        :class=\"inputClassses\"\r\n        class=\"z-50\"\r\n        icon-pack=\"feather\"\r\n        icon=\"icon-search\"\r\n        icon-no-border\r\n        v-model=\"searchQuery\"\r\n        @keyup.esc=\"escPressed\"\r\n        @keyup.up=\"increaseIndex(false)\"\r\n        @keyup.down=\"increaseIndex\"\r\n        @keyup.enter=\"suggestionSelected\"\r\n        @focus=\"updateInputFocus\"\r\n        @blur=\"updateInputFocus(false)\" />\r\n    </div>\r\n\r\n    <!-- Group List -->\r\n    <ul\r\n      ref=\"scrollContainer\"\r\n      :class=\"{'hidden': !inputFocused}\"\r\n      class=\"auto-suggest-suggestions-list z-50 rounded-lg mt-2 shadow-lg overflow-x-hidden\"\r\n      @mouseenter=\"insideSuggestions = true\"\r\n      @mouseleave=\"insideSuggestions = false\"\r\n      @focus=\"updateInputFocus\"\r\n      @blur=\"updateInputFocus(false)\"\r\n      tabindex=\"-1\">\r\n\r\n      <li\r\n        ref=\"grp_list\"\r\n        v-for=\"(suggestion_list, grp_name, grp_index) in filteredData\"\r\n        :key=\"grp_index\"\r\n        class=\"auto-suggest__suggestion-group-container\">\r\n\r\n          <!-- Group Header -->\r\n          <p class=\"auto-suggest__suggestion-group-title pt-3 pb-1 px-4\" v-if=\"!hideGroupTitle\">\r\n            <slot name=\"group\" :group_name=\"grp_name\"></slot>\r\n          </p>\r\n\r\n          <!-- Suggestion List of each group -->\r\n          <ul>\r\n            <li\r\n              v-for=\"(suggestion, index) in suggestion_list\"\r\n              :key=\"index\"\r\n              class=\"auto-suggest__suggestion-group__suggestion py-3 px-4 cursor-pointer\"\r\n              :class=\"{'vx-auto-suggest__current-selected': currentSelected == `${grp_index}.${index}`}\"\r\n              @mouseenter=\"currentSelected = `${grp_index}.${index}`\"\r\n              @click=\"suggestionSelected\">\r\n              <slot :name=\"grp_name\" :suggestion=\"suggestion\"></slot>\r\n            </li>\r\n\r\n            <li class=\"auto-suggest__suggestion-group__suggestion py-3 px-4 no-results\" v-if=\"!suggestion_list.length && searchQuery\">\r\n              <slot name=\"noResult\" :group_name=\"grp_name\">\r\n                  <p>No Results Found.</p>\r\n              </slot>\r\n            </li>\r\n          </ul>\r\n      </li>\r\n    </ul>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default{\r\n  props: {\r\n    placeholder: {\r\n      type: String,\r\n      default: 'Search..'\r\n    },\r\n    data: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    initalData: {\r\n      type: Object,\r\n      default: () => new Object\r\n    },\r\n    inputClassses: {\r\n      type: [String, Object, Array]\r\n    },\r\n    autoFocus: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    showPinned: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    searchLimit: {\r\n      type: Number,\r\n      default: 4\r\n    },\r\n    hideGroupTitle: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      searchQuery: '',\r\n      filteredData: {},\r\n      currentSelected: -1,\r\n      inputFocused: false,\r\n      insideSuggestions: false\r\n    }\r\n  },\r\n  watch: {\r\n    // UPDATE SUGGESTIONS LIST\r\n    searchQuery (val) {\r\n      this.$emit('input', val)\r\n\r\n      if (val === '') {\r\n        this.inputInit()\r\n      } else {\r\n        const queried_data = {}\r\n        const data_grps = Object.keys(this.data)\r\n\r\n        data_grps.forEach((grp, i) => {\r\n          queried_data[data_grps[i]] = this.filter_grp(this.data[grp])\r\n        })\r\n\r\n        // Check if any of group has at least one queried item\r\n        if (!Object.values(queried_data).some(obj => obj.length)) {\r\n          this.currentSelected = -1\r\n        }\r\n\r\n        this.filteredData = queried_data\r\n      }\r\n    },\r\n    autoFocus (val) {\r\n      if (val) this.focusInput()\r\n      else this.searchQuery = ''\r\n    },\r\n    filteredData (val) {\r\n      // Auto Select first item if it's not item-404\r\n      let grp_index = null\r\n\r\n      for (const [index, grp_suggestions] of Object.values(val).entries()) {\r\n        if (grp_suggestions.length) {\r\n          grp_index = index\r\n          break\r\n        }\r\n      }\r\n\r\n      if (grp_index !== null) this.currentSelected = `${grp_index  }.0`\r\n    }\r\n  },\r\n  methods: {\r\n    escPressed () {\r\n      this.$emit('closeSearchbar')\r\n      this.searchQuery = ''\r\n    },\r\n    filter_grp (grp) {\r\n      const exactEle = grp.data.filter((item) => {\r\n        return item[grp.key].toLowerCase().startsWith(this.searchQuery.toLowerCase())\r\n      })\r\n      const containEle = grp.data.filter((item) => {\r\n        return !item[grp.key].toLowerCase().startsWith(this.searchQuery.toLowerCase()) && item[grp.key].toLowerCase().indexOf(this.searchQuery.toLowerCase()) > -1\r\n      })\r\n      return exactEle.concat(containEle).slice(0, this.searchLimit)\r\n    },\r\n    inputInit () {\r\n      if (Object.entries(this.initalData).length === 0 && this.initalData.constructor === Object) {\r\n        this.filteredData = {}\r\n      } else {\r\n        this.filteredData = this.initalData\r\n      }\r\n    },\r\n    updateInputFocus (val = true) {\r\n      if (val) {\r\n        if (this.searchQuery === '') this.inputInit()\r\n        setTimeout(() => {\r\n          this.inputFocused = true\r\n        }, 100)\r\n      } else {\r\n        if (this.insideSuggestions) return\r\n        setTimeout(() => {\r\n          this.inputFocused = false\r\n        }, 100)\r\n        this.escPressed()\r\n      }\r\n    },\r\n    suggestionSelected () {\r\n      if (this.currentSelected > -1) {\r\n\r\n        const [grp_index, item_index] = this.currentSelected.split('.')\r\n\r\n        const grp_of_selected_item = Object.keys(this.data)[grp_index]\r\n        const selected_item = this.filteredData[grp_of_selected_item][item_index]\r\n\r\n        this.$emit('selected', {[grp_of_selected_item]: selected_item})\r\n\r\n        this.searchQuery = ''\r\n      }\r\n    },\r\n    increaseIndex (val = true) {\r\n\r\n      /* eslint-disable no-lonely-if */\r\n\r\n      // If there's no matching items\r\n      if (!Object.values(this.filteredData).some(grp_items => grp_items.length)) return\r\n\r\n      const [grp_i, item_i] = this.currentSelected.split('.')\r\n\r\n      const grp_arr = Object.entries(this.filteredData)\r\n      const active_grp_total_items = grp_arr[grp_i][1].length\r\n\r\n      if (val) {\r\n        // If active item is not of last item in grp\r\n        if (active_grp_total_items - 1 > item_i) {\r\n          this.currentSelected = `${grp_i  }.${   Number(item_i) + 1}`\r\n\r\n        // If active item grp is not last in grp list\r\n        } else if (grp_i < grp_arr.length - 1) {\r\n\r\n          for (let i = Number(grp_i) + 1; i < grp_arr.length; i++) {\r\n\r\n            // If navigating group have items => Then move in that group\r\n            if (grp_arr[i][1].length > 0) {\r\n              this.currentSelected = `${Number(i)  }.0`\r\n              break\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        // If active item is not of first item in grp\r\n        if (Number(item_i)) {\r\n          this.currentSelected = `${grp_i  }.${   Number(item_i) - 1}`\r\n\r\n        // If active item grp  is not first in grp list\r\n        } else if (Number(grp_i)) {\r\n\r\n          for (let i = Number(grp_i) - 1; i >= 0; i--) {\r\n\r\n            // If navigating group have items => Then move in that group\r\n            if (grp_arr[i][1].length > 0) {\r\n              this.currentSelected = `${i  }.${  grp_arr[i][1].length - 1}`\r\n              break\r\n            }\r\n          }\r\n        }\r\n      }\r\n      /* eslint-enable no-lonely-if */\r\n    },\r\n    focusInput () {\r\n      this.$refs.input.$el.querySelector('input').focus()\r\n    }\r\n  },\r\n  mounted () {\r\n    if (this.autoFocus) this.focusInput()\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/vuexy/components/vxAutoSuggest.scss\";\r\n</style>\r\n"]}]}