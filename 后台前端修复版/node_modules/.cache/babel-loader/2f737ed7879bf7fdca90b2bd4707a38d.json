{"remainingRequest":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\thread-loader\\dist\\cjs.js!D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\babel-loader\\lib\\index.js!D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\src\\views\\charts-and-maps\\charts\\chartjs\\ChartjsLineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\src\\views\\charts-and-maps\\charts\\chartjs\\ChartjsLineChart.vue","mtime":1620826038000},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\babel.config.js","mtime":1620826038000},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1664268237683},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\babel-loader\\lib\\index.js","mtime":1663908471338},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\vue-loader\\lib\\index.js","mtime":1664268237964}],"contextDependencies":[],"result":["import ChartjsComponentLineChart from \"./charts-components/ChartjsComponentLineChart.vue\";\nexport default {\n  data: function data() {\n    return {\n      data: {\n        labels: [1500, 1600, 1700, 1750, 1800, 1850, 1900, 1950, 1999, 2050],\n        datasets: [{\n          data: [86, 114, 106, 106, 107, 111, 133, 221, 783, 2478],\n          label: 'Africa',\n          borderColor: '#7367F0',\n          fill: false\n        }, {\n          data: [282, 350, 411, 502, 635, 809, 947, 1402, 3700, 5267],\n          label: 'Asia',\n          borderColor: '#28C76F',\n          fill: false\n        }, {\n          data: [168, 170, 178, 190, 203, 276, 408, 547, 675, 734],\n          label: 'Europe',\n          borderColor: '#EA5455',\n          fill: false\n        }, {\n          data: [40, 20, 10, 16, 24, 38, 74, 167, 508, 784],\n          label: 'Latin America',\n          borderColor: '#FF9F43',\n          fill: false\n        }, {\n          data: [6, 3, 2, 2, 7, 26, 82, 172, 312, 433],\n          label: 'North America',\n          borderColor: '#1E1E1E',\n          fill: false\n        }]\n      },\n      options: {\n        title: {\n          display: true,\n          text: 'World population per region (in millions)'\n        }\n      }\n    };\n  },\n  components: {\n    ChartjsComponentLineChart: ChartjsComponentLineChart\n  }\n};",{"version":3,"mappings":"AAwEA;AACA;EACAA,IADA,kBACA;IACA;MACAA;QACAC,oEADA;QAEAC,WACA;UACAF,wDADA;UAEAG,eAFA;UAGAC,sBAHA;UAIAC;QAJA,CADA,EAMA;UACAL,2DADA;UAEAG,aAFA;UAGAC,sBAHA;UAIAC;QAJA,CANA,EAWA;UACAL,wDADA;UAEAG,eAFA;UAGAC,sBAHA;UAIAC;QAJA,CAXA,EAgBA;UACAL,iDADA;UAEAG,sBAFA;UAGAC,sBAHA;UAIAC;QAJA,CAhBA,EAqBA;UACAL,4CADA;UAEAG,sBAFA;UAGAC,sBAHA;UAIAC;QAJA,CArBA;MAFA,CADA;MAgCAC;QACAC;UACAC,aADA;UAEAC;QAFA;MADA;IAhCA;EAuCA,CAzCA;EA0CAC;IACAC;EADA;AA1CA","names":["data","labels","datasets","label","borderColor","fill","options","title","display","text","components","ChartjsComponentLineChart"],"sourceRoot":"src/views/charts-and-maps/charts/chartjs","sources":["ChartjsLineChart.vue"],"sourcesContent":["<!-- =========================================================================================\r\n    File Name: ChartLineChart.vue\r\n    Description: Create line chart\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n    <vx-card title=\"Line Chart\" class=\"mb-base\" code-toggler>\r\n\r\n        <div class=\"mt-5\">\r\n            <chartjs-component-line-chart :height=\"250\" :data=\"data\" :options=\"options\"></chartjs-component-line-chart>\r\n        </div>\r\n\r\n        <template slot=\"codeContainer\">\r\n&lt;script&gt;\r\nimport { Line } from 'vue-chartjs'\r\n\r\nexport default {\r\n  extends: Line,\r\n  data() {\r\n    return {\r\n      data: {\r\n        labels: [1500, 1600, 1700, 1750, 1800, 1850, 1900, 1950, 1999, 2050],\r\n        datasets: [{\r\n          data: [86, 114, 106, 106, 107, 111, 133, 221, 783, 2478],\r\n          label: &quot;Africa&quot;,\r\n          borderColor: &quot;#3e95cd&quot;,\r\n          fill: false\r\n        }, {\r\n          data: [282, 350, 411, 502, 635, 809, 947, 1402, 3700, 5267],\r\n          label: &quot;Asia&quot;,\r\n          borderColor: &quot;#8e5ea2&quot;,\r\n          fill: false\r\n        }, {\r\n          data: [168, 170, 178, 190, 203, 276, 408, 547, 675, 734],\r\n          label: &quot;Europe&quot;,\r\n          borderColor: &quot;#3cba9f&quot;,\r\n          fill: false\r\n        }, {\r\n          data: [40, 20, 10, 16, 24, 38, 74, 167, 508, 784],\r\n          label: &quot;Latin America&quot;,\r\n          borderColor: &quot;#e8c3b9&quot;,\r\n          fill: false\r\n        }, {\r\n          data: [6, 3, 2, 2, 7, 26, 82, 172, 312, 433],\r\n          label: &quot;North America&quot;,\r\n          borderColor: &quot;#c45850&quot;,\r\n          fill: false\r\n        }]\r\n      },\r\n      options: {\r\n        title: {\r\n          display: true,\r\n          text: 'World population per region (in millions)'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    this.renderChart(this.data, this.options)\r\n  }\r\n}\r\n&lt;/script&gt;\r\n        </template>\r\n    </vx-card>\r\n</template>\r\n\r\n<script>\r\nimport ChartjsComponentLineChart from './charts-components/ChartjsComponentLineChart.vue'\r\nexport default {\r\n  data () {\r\n    return {\r\n      data: {\r\n        labels: [1500, 1600, 1700, 1750, 1800, 1850, 1900, 1950, 1999, 2050],\r\n        datasets: [\r\n          {\r\n            data: [86, 114, 106, 106, 107, 111, 133, 221, 783, 2478],\r\n            label: 'Africa',\r\n            borderColor: '#7367F0',\r\n            fill: false\r\n          }, {\r\n            data: [282, 350, 411, 502, 635, 809, 947, 1402, 3700, 5267],\r\n            label: 'Asia',\r\n            borderColor: '#28C76F',\r\n            fill: false\r\n          }, {\r\n            data: [168, 170, 178, 190, 203, 276, 408, 547, 675, 734],\r\n            label: 'Europe',\r\n            borderColor: '#EA5455',\r\n            fill: false\r\n          }, {\r\n            data: [40, 20, 10, 16, 24, 38, 74, 167, 508, 784],\r\n            label: 'Latin America',\r\n            borderColor: '#FF9F43',\r\n            fill: false\r\n          }, {\r\n            data: [6, 3, 2, 2, 7, 26, 82, 172, 312, 433],\r\n            label: 'North America',\r\n            borderColor: '#1E1E1E',\r\n            fill: false\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        title: {\r\n          display: true,\r\n          text: 'World population per region (in millions)'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n    ChartjsComponentLineChart\r\n  }\r\n}\r\n</script>\r\n"]}]}