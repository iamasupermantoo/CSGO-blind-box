{"remainingRequest":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\babel-loader\\lib\\index.js!D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\src\\views\\apps\\todo\\TodoEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\src\\views\\apps\\todo\\TodoEdit.vue","mtime":1620826038000},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\babel.config.js","mtime":1620826038000},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\babel-loader\\lib\\index.js","mtime":1663908471338},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\vue-loader\\lib\\index.js","mtime":1664268237964}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.number.constructor\";\nexport default {\n  props: {\n    displayPrompt: {\n      type: Boolean,\n      required: true\n    },\n    taskId: {\n      type: Number,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      taskLocal: Object.assign({}, this.$store.getters['todo/getTask'](this.taskId))\n    };\n  },\n  computed: {\n    activePrompt: {\n      get: function get() {\n        return this.displayPrompt;\n      },\n      set: function set(value) {\n        this.$emit('hideDisplayPrompt', value);\n      }\n    },\n    taskTags: function taskTags() {\n      return this.$store.state.todo.taskTags;\n    },\n    validateForm: function validateForm() {\n      return !this.errors.any() && this.taskLocal.title !== '';\n    }\n  },\n  methods: {\n    removeTodo: function removeTodo() {\n      var _this = this;\n\n      this.$store.dispatch('todo/updateTask', Object.assign({}, this.taskLocal, {\n        isTrashed: true\n      })).then(function () {\n        // Fetch Tasks\n        _this.$store.dispatch('todo/fetchTasks', {\n          filter: _this.$route.params.filter\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    init: function init() {\n      this.taskLocal = Object.assign({}, this.$store.getters['todo/getTask'](this.taskId));\n    },\n    submitTodo: function submitTodo() {\n      this.$store.dispatch('todo/updateTask', this.taskLocal);\n    }\n  }\n};",{"version":3,"mappings":";;AAmEA;EACAA;IACAC;MACAC,aADA;MAEAC;IAFA,CADA;IAKAC;MACAF,YADA;MAEAC;IAFA;EALA,CADA;EAWAE,IAXA,kBAWA;IACA;MACAC;IADA;EAGA,CAfA;EAgBAC;IACAC;MACAC,GADA,iBACA;QACA;MACA,CAHA;MAIAC,GAJA,eAIAC,KAJA,EAIA;QACA;MACA;IANA,CADA;IASAC,QATA,sBASA;MACA;IACA,CAXA;IAYAC,YAZA,0BAYA;MACA;IACA;EAdA,CAhBA;EAgCAC;IACAC,UADA,wBACA;MAAA;;MACA;QAAAC;MAAA,IACAC,IADA,CACA;QACA;QACA;UAAAC;QAAA;MACA,CAJA,EAKAC,KALA,CAKA;QAAAC;MAAA,CALA;IAMA,CARA;IASAC,IATA,kBASA;MACA;IACA,CAXA;IAYAC,UAZA,wBAYA;MACA;IACA;EAdA;AAhCA","names":["props","displayPrompt","type","required","taskId","data","taskLocal","computed","activePrompt","get","set","value","taskTags","validateForm","methods","removeTodo","isTrashed","then","filter","catch","console","init","submitTodo"],"sourceRoot":"src/views/apps/todo","sources":["TodoEdit.vue"],"sourcesContent":["<!-- =========================================================================================\r\n    File Name: TodoEdit.vue\r\n    Description: Edit todo component\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n    <vs-prompt\r\n        title=\"Edit Task\"\r\n        accept-text= \"Submit\"\r\n        cancel-text = \"Remove\"\r\n        button-cancel = \"border\"\r\n        @cancel=\"removeTodo\"\r\n        @accept=\"submitTodo\"\r\n        @close=\"init\"\r\n        :is-valid=\"validateForm\"\r\n        :active.sync=\"activePrompt\">\r\n        <div>\r\n            <form>\r\n                <div class=\"vx-row\">\r\n                    <div class=\"vx-col w-1/6 self-center\">\r\n                        <vs-checkbox v-model=\"taskLocal.isCompleted\" class=\"w-8\"></vs-checkbox>\r\n                    </div>\r\n\r\n                    <div class=\"vx-col ml-auto flex\">\r\n                        <feather-icon\r\n                          icon=\"InfoIcon\"\r\n                          class=\"cursor-pointer\"\r\n                          :svgClasses=\"[{'text-success stroke-current': taskLocal.isImportant}, 'w-5', 'h-5 mr-4']\"\r\n                          @click.prevent=\"taskLocal.isImportant = !taskLocal.isImportant\" />\r\n\r\n                        <feather-icon\r\n                          icon=\"StarIcon\"\r\n                          class=\"cursor-pointer\"\r\n                          :svgClasses=\"[{'text-warning stroke-current': taskLocal.isStarred}, 'w-5', 'h-5 mr-4']\"\r\n                          @click.prevent=\"taskLocal.isStarred = !taskLocal.isStarred\" />\r\n\r\n                        <vs-dropdown class=\"cursor-pointer flex\" vs-custom-content>\r\n\r\n                            <feather-icon icon=\"TagIcon\" svgClasses=\"h-5 w-5\" />\r\n\r\n                            <vs-dropdown-menu style=\"z-index: 200001\">\r\n                                  <vs-dropdown-item @click.stop v-for=\"(tag, index) in taskTags\" :key=\"index\">\r\n                                      <vs-checkbox :vs-value=\"tag.value\" v-model=\"taskLocal.tags\">{{ tag.text }}</vs-checkbox>\r\n                                  </vs-dropdown-item>\r\n                            </vs-dropdown-menu>\r\n                        </vs-dropdown>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"vx-row\">\r\n                    <div class=\"vx-col w-full\">\r\n                        <vs-input v-validate=\"'required'\" name=\"title\" class=\"w-full mb-4 mt-5\" placeholder=\"Title\" v-model=\"taskLocal.title\" />\r\n                        <vs-textarea rows=\"5\" label=\"Add description\" v-model=\"taskLocal.desc\" />\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    </vs-prompt>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    displayPrompt: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    taskId: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      taskLocal: Object.assign({}, this.$store.getters['todo/getTask'](this.taskId))\r\n    }\r\n  },\r\n  computed: {\r\n    activePrompt: {\r\n      get () {\r\n        return this.displayPrompt\r\n      },\r\n      set (value) {\r\n        this.$emit('hideDisplayPrompt', value)\r\n      }\r\n    },\r\n    taskTags () {\r\n      return this.$store.state.todo.taskTags\r\n    },\r\n    validateForm () {\r\n      return !this.errors.any() && this.taskLocal.title !== ''\r\n    }\r\n  },\r\n  methods: {\r\n    removeTodo () {\r\n      this.$store.dispatch('todo/updateTask', Object.assign({}, this.taskLocal, {isTrashed: true}))\r\n        .then(() => {\r\n          // Fetch Tasks\r\n          this.$store.dispatch('todo/fetchTasks', { filter: this.$route.params.filter })\r\n        })\r\n        .catch((error) => { console.error(error) })\r\n    },\r\n    init () {\r\n      this.taskLocal = Object.assign({}, this.$store.getters['todo/getTask'](this.taskId))\r\n    },\r\n    submitTodo () {\r\n      this.$store.dispatch('todo/updateTask', this.taskLocal)\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}