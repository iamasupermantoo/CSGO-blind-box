{"remainingRequest":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\babel-loader\\lib\\index.js!D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\src\\store\\email\\moduleEmailActions.js","dependencies":[{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\src\\store\\email\\moduleEmailActions.js","mtime":1620826038000},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\babel.config.js","mtime":1620826038000},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Program Files (x86)\\wechat\\WeChat Files\\wxid_ue0ca48wn2m522\\FileStorage\\File\\2022-09\\盲盒源码\\后台前端\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.filter\";\n\n/*=========================================================================================\r\n  File Name: moduleEmailActions.js\r\n  Description: Email Module Actions\r\n  ----------------------------------------------------------------------------------------\r\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n  Author: Pixinvent\r\n  Author URL: http://www.themeforest.net/user/pixinvent\r\n==========================================================================================*/\nimport axios from '@/axios.js';\nexport default {\n  setEmailSearchQuery: function setEmailSearchQuery(_ref, query) {\n    var commit = _ref.commit;\n    commit('SET_EMAIL_SEARCH_QUERY', query);\n  },\n  // Fetch emails\n  fetchEmails: function fetchEmails(_ref2, payload) {\n    var commit = _ref2.commit;\n    return new Promise(function (resolve, reject) {\n      axios.get('/api/apps/email/mails', {\n        params: {\n          filter: payload.filter\n        }\n      }).then(function (response) {\n        commit('SET_MAILS', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Fetch Tags\n  fetchTags: function fetchTags(_ref3) {\n    var commit = _ref3.commit;\n    return new Promise(function (resolve, reject) {\n      axios.get('/api/apps/email/tags').then(function (response) {\n        commit('SET_TAGS', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Fetch Email Meta\n  fetchMeta: function fetchMeta(_ref4) {\n    var commit = _ref4.commit;\n    return new Promise(function (resolve, reject) {\n      axios.get('/api/apps/email/meta').then(function (response) {\n        commit('SET_META', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Move mails to another folder\n  moveMailsTo: function moveMailsTo(_ref5, payload) {\n    var commit = _ref5.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post('/api/apps/email/move-mails', {\n        emailIds: payload.emailIds,\n        mailFolder: payload.to\n      }).then(function (response) {\n        commit('MOVE_MAILS_TO', payload);\n        commit('UPDATE_UNREAD_META_ON_MOVE', payload);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Update Mails label\n  updateLabels: function updateLabels(_ref6, payload) {\n    var commit = _ref6.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post('/api/apps/email/update-labels', {\n        emailIds: payload.mails,\n        label: payload.label\n      }).then(function (response) {\n        commit('UPDATE_LABELS', payload);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  setLabels: function setLabels(_ref7, payload) {\n    var commit = _ref7.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post('/api/apps/email/set-labels', {\n        mailId: payload.mailId,\n        labels: payload.labels\n      }).then(function (response) {\n        commit('SET_LABELS', payload);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Set mails flag unread to true\n  setUnread: function setUnread(_ref8, payload) {\n    var commit = _ref8.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post('/api/apps/email/mark-unread', {\n        emailIds: payload.emailIds,\n        unreadFlag: payload.unreadFlag\n      }).then(function (response) {\n        commit('SET_UNREAD', payload); // Remove this if you are getting meta like us\n        // Use your own method to update email meta if you are fetching email meta\n\n        commit('UPDATE_UNREAD_META', payload);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Toggle isStarred flag in mail\n  toggleIsMailStarred: function toggleIsMailStarred(_ref9, payload) {\n    var commit = _ref9.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post('/api/apps/email/set-starred', {\n        mailId: payload.mailId,\n        value: payload.value\n      }).then(function (response) {\n        commit('TOGGLE_IS_MAIL_STARRED', payload);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  }\n};",{"version":3,"sources":["D:/Program Files (x86)/wechat/WeChat Files/wxid_ue0ca48wn2m522/FileStorage/File/2022-09/盲盒源码/后台前端/src/store/email/moduleEmailActions.js"],"names":["axios","setEmailSearchQuery","query","commit","fetchEmails","payload","Promise","resolve","reject","get","params","filter","then","response","data","catch","error","fetchTags","fetchMeta","moveMailsTo","post","emailIds","mailFolder","to","updateLabels","mails","label","setLabels","mailId","labels","setUnread","unreadFlag","toggleIsMailStarred","value"],"mappings":"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","sourcesContent":["/*=========================================================================================\r\n  File Name: moduleEmailActions.js\r\n  Description: Email Module Actions\r\n  ----------------------------------------------------------------------------------------\r\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n  Author: Pixinvent\r\n  Author URL: http://www.themeforest.net/user/pixinvent\r\n==========================================================================================*/\r\n\r\nimport axios from '@/axios.js'\r\n\r\nexport default {\r\n  setEmailSearchQuery ({ commit }, query) {\r\n    commit('SET_EMAIL_SEARCH_QUERY', query)\r\n  },\r\n\r\n  // Fetch emails\r\n  fetchEmails ({ commit }, payload) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.get('/api/apps/email/mails', { params: {filter: payload.filter} })\r\n        .then((response) => {\r\n          commit('SET_MAILS', response.data)\r\n          resolve(response)\r\n        })\r\n        .catch((error) => { reject(error) })\r\n    })\r\n  },\r\n\r\n  // Fetch Tags\r\n  fetchTags ({ commit }) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.get('/api/apps/email/tags')\r\n        .then((response) => {\r\n          commit('SET_TAGS', response.data)\r\n          resolve(response)\r\n        })\r\n        .catch((error) => { reject(error) })\r\n    })\r\n  },\r\n\r\n  // Fetch Email Meta\r\n  fetchMeta ({ commit }) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.get('/api/apps/email/meta')\r\n        .then((response) => {\r\n          commit('SET_META', response.data)\r\n          resolve(response)\r\n        })\r\n        .catch((error) => { reject(error) })\r\n    })\r\n  },\r\n\r\n  // Move mails to another folder\r\n  moveMailsTo ({ commit }, payload) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.post('/api/apps/email/move-mails', { emailIds: payload.emailIds,\r\n        mailFolder: payload.to })\r\n        .then((response) => {\r\n          commit('MOVE_MAILS_TO', payload)\r\n          commit('UPDATE_UNREAD_META_ON_MOVE', payload)\r\n          resolve(response)\r\n        })\r\n        .catch((error) => { reject(error) })\r\n    })\r\n  },\r\n\r\n  // Update Mails label\r\n  updateLabels ({ commit }, payload) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.post('/api/apps/email/update-labels', { emailIds: payload.mails,\r\n        label: payload.label })\r\n        .then((response) => {\r\n          commit('UPDATE_LABELS', payload)\r\n          resolve(response)\r\n        })\r\n        .catch((error) => { reject(error) })\r\n    })\r\n  },\r\n\r\n  setLabels ({ commit }, payload) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.post('/api/apps/email/set-labels', { mailId: payload.mailId,\r\n        labels: payload.labels })\r\n        .then((response) => {\r\n          commit('SET_LABELS', payload)\r\n          resolve(response)\r\n        })\r\n        .catch((error) => { reject(error) })\r\n    })\r\n  },\r\n\r\n  // Set mails flag unread to true\r\n  setUnread ({ commit }, payload) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.post('/api/apps/email/mark-unread', { emailIds: payload.emailIds,\r\n        unreadFlag: payload.unreadFlag })\r\n        .then((response) => {\r\n          commit('SET_UNREAD', payload)\r\n\r\n          // Remove this if you are getting meta like us\r\n          // Use your own method to update email meta if you are fetching email meta\r\n          commit('UPDATE_UNREAD_META', payload)\r\n          resolve(response)\r\n        })\r\n        .catch((error) => { reject(error) })\r\n    })\r\n  },\r\n\r\n  // Toggle isStarred flag in mail\r\n  toggleIsMailStarred ({ commit }, payload) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.post('/api/apps/email/set-starred', { mailId: payload.mailId,\r\n        value: payload.value })\r\n        .then((response) => {\r\n          commit('TOGGLE_IS_MAIL_STARRED', payload)\r\n          resolve(response)\r\n        })\r\n        .catch((error) => { reject(error) })\r\n    })\r\n  }\r\n}\r\n"]}]}