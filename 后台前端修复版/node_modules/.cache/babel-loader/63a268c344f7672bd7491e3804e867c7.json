{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\src\\layouts\\components\\navbar\\components\\NotificationDropDown.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\src\\layouts\\components\\navbar\\components\\NotificationDropDown.vue","mtime":1620826038000},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\babel.config.js","mtime":1620826038000},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1664268237683},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\babel-loader\\lib\\index.js","mtime":1663908471338},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664268236462},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\后台前端\\node_modules\\vue-loader\\lib\\index.js","mtime":1664268237964}],"contextDependencies":[],"result":["import VuePerfectScrollbar from 'vue-perfect-scrollbar';\nexport default {\n  components: {\n    VuePerfectScrollbar: VuePerfectScrollbar\n  },\n  data: function data() {\n    return {\n      unreadNotifications: [{\n        index: 0,\n        title: 'New Message',\n        msg: 'Are your going to meet me tonight?',\n        icon: 'MessageSquareIcon',\n        time: this.randomDate({\n          sec: 10\n        }),\n        category: 'primary'\n      }, {\n        index: 1,\n        title: 'New Order Recieved',\n        msg: 'You got new order of goods.',\n        icon: 'PackageIcon',\n        time: this.randomDate({\n          sec: 40\n        }),\n        category: 'success'\n      }, {\n        index: 2,\n        title: 'Server Limit Reached!',\n        msg: 'Server have 99% CPU usage.',\n        icon: 'AlertOctagonIcon',\n        time: this.randomDate({\n          min: 1\n        }),\n        category: 'danger'\n      }, {\n        index: 3,\n        title: 'New Mail From Peter',\n        msg: 'Cake sesame snaps cupcake',\n        icon: 'MailIcon',\n        time: this.randomDate({\n          min: 6\n        }),\n        category: 'primary'\n      }, {\n        index: 4,\n        title: 'Bruce\\'s Party',\n        msg: 'Chocolate cake oat cake tiramisu',\n        icon: 'CalendarIcon',\n        time: this.randomDate({\n          hr: 2\n        }),\n        category: 'warning'\n      }],\n      settings: {\n        maxScrollbarLength: 60,\n        wheelSpeed: .60\n      }\n    };\n  },\n  computed: {\n    scrollbarTag: function scrollbarTag() {\n      return this.$store.getters.scrollbarTag;\n    }\n  },\n  methods: {\n    elapsedTime: function elapsedTime(startTime) {\n      var x = new Date(startTime);\n      var now = new Date();\n      var timeDiff = now - x;\n      timeDiff /= 1000;\n      var seconds = Math.round(timeDiff);\n      timeDiff = Math.floor(timeDiff / 60);\n      var minutes = Math.round(timeDiff % 60);\n      timeDiff = Math.floor(timeDiff / 60);\n      var hours = Math.round(timeDiff % 24);\n      timeDiff = Math.floor(timeDiff / 24);\n      var days = Math.round(timeDiff % 365);\n      timeDiff = Math.floor(timeDiff / 365);\n      var years = timeDiff;\n\n      if (years > 0) {\n        return \"\".concat(years + (years > 1 ? ' Years ' : ' Year '), \"ago\");\n      } else if (days > 0) {\n        return \"\".concat(days + (days > 1 ? ' Days ' : ' Day '), \"ago\");\n      } else if (hours > 0) {\n        return \"\".concat(hours + (hours > 1 ? ' Hrs ' : ' Hour '), \"ago\");\n      } else if (minutes > 0) {\n        return \"\".concat(minutes + (minutes > 1 ? ' Mins ' : ' Min '), \"ago\");\n      } else if (seconds > 0) {\n        return seconds + (seconds > 1 ? ' sec ago' : 'just now');\n      }\n\n      return 'Just Now';\n    },\n    // Method for creating dummy notification time\n    randomDate: function randomDate(_ref) {\n      var hr = _ref.hr,\n          min = _ref.min,\n          sec = _ref.sec;\n      var date = new Date();\n      if (hr) date.setHours(date.getHours() - hr);\n      if (min) date.setMinutes(date.getMinutes() - min);\n      if (sec) date.setSeconds(date.getSeconds() - sec);\n      return date;\n    }\n  }\n};",{"version":3,"mappings":"AAmDA;AAEA;EACAA;IACAC;EADA,CADA;EAIAC,IAJA,kBAIA;IACA;MACAC,sBACA;QACAC,QADA;QAEAC,oBAFA;QAGAC,yCAHA;QAIAC,yBAJA;QAKAC;UAAAC;QAAA,EALA;QAMAC;MANA,CADA,EASA;QAAAN;QACAC,2BADA;QAEAC,kCAFA;QAGAC,mBAHA;QAIAC;UAAAC;QAAA,EAJA;QAKAC;MALA,CATA,EAgBA;QAAAN;QACAC,8BADA;QAEAC,iCAFA;QAGAC,wBAHA;QAIAC;UAAAG;QAAA,EAJA;QAKAD;MALA,CAhBA,EAuBA;QAAAN;QACAC,4BADA;QAEAC,gCAFA;QAGAC,gBAHA;QAIAC;UAAAG;QAAA,EAJA;QAKAD;MALA,CAvBA,EA8BA;QAAAN;QACAC,uBADA;QAEAC,uCAFA;QAGAC,oBAHA;QAIAC;UAAAI;QAAA,EAJA;QAKAF;MALA,CA9BA,CADA;MAuCAG;QACAC,sBADA;QAEAC;MAFA;IAvCA;EA4CA,CAjDA;EAkDAC;IACAC,YADA,0BACA;MAAA;IAAA;EADA,CAlDA;EAqDAC;IACAC,WADA,uBACAC,SADA,EACA;MACA;MACA;MACA;MACAC;MAEA;MACAA;MAEA;MACAA;MAEA;MACAA;MAEA;MACAA;MAEA;;MAEA;QACA;MACA,CAFA,MAEA;QACA;MACA,CAFA,MAEA;QACA;MACA,CAFA,MAEA;QACA;MACA,CAFA,MAEA;QACA;MACA;;MAEA;IACA,CAlCA;IAmCA;IACAC,UApCA,4BAoCA;MAAA;MAAA;MAAA;MACA;MAEA;MACA;MACA;MAEA;IACA;EA5CA;AArDA","names":["components","VuePerfectScrollbar","data","unreadNotifications","index","title","msg","icon","time","sec","category","min","hr","settings","maxScrollbarLength","wheelSpeed","computed","scrollbarTag","methods","elapsedTime","startTime","timeDiff","randomDate"],"sourceRoot":"src/layouts/components/navbar/components","sources":["NotificationDropDown.vue"],"sourcesContent":["<template>\r\n  <!-- NOTIFICATIONS -->\r\n  <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\">\r\n    <feather-icon icon=\"BellIcon\" class=\"cursor-pointer mt-1 sm:mr-6 mr-2\" :badge=\"unreadNotifications.length\" />\r\n\r\n    <vs-dropdown-menu class=\"notification-dropdown dropdown-custom vx-navbar-dropdown\">\r\n\r\n      <div class=\"notification-top text-center p-5 bg-primary text-white\">\r\n        <h3 class=\"text-white\">{{ unreadNotifications.length }} New</h3>\r\n        <p class=\"opacity-75\">App Notifications</p>\r\n      </div>\r\n\r\n      <component :is=\"scrollbarTag\" ref=\"mainSidebarPs\" class=\"scroll-area--nofications-dropdown p-0 mb-10\" :settings=\"settings\" :key=\"$vs.rtl\">\r\n        <ul class=\"bordered-items\">\r\n          <li v-for=\"ntf in unreadNotifications\" :key=\"ntf.index\" class=\"flex justify-between px-4 py-4 notification cursor-pointer\">\r\n            <div class=\"flex items-start\">\r\n              <feather-icon :icon=\"ntf.icon\" :svgClasses=\"[`text-${ntf.category}`, 'stroke-current mr-1 h-6 w-6']\"></feather-icon>\r\n              <div class=\"mx-2\">\r\n                <span class=\"font-medium block notification-title\" :class=\"[`text-${ntf.category}`]\">{{ ntf.title }}</span>\r\n                <small>{{ ntf.msg }}</small>\r\n              </div>\r\n            </div>\r\n            <small class=\"mt-1 whitespace-no-wrap\">{{ elapsedTime(ntf.time) }}</small>\r\n          </li>\r\n        </ul>\r\n      </component>\r\n\r\n      <div class=\"\r\n        checkout-footer\r\n        fixed\r\n        bottom-0\r\n        rounded-b-lg\r\n        text-primary\r\n        w-full\r\n        p-2\r\n        font-semibold\r\n        text-center\r\n        border\r\n        border-b-0\r\n        border-l-0\r\n        border-r-0\r\n        border-solid\r\n        d-theme-border-grey-light\r\n        cursor-pointer\">\r\n        <span>View All Notifications</span>\r\n      </div>\r\n    </vs-dropdown-menu>\r\n  </vs-dropdown>\r\n</template>\r\n\r\n<script>\r\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\r\n\r\nexport default {\r\n  components: {\r\n    VuePerfectScrollbar\r\n  },\r\n  data () {\r\n    return {\r\n      unreadNotifications: [\r\n        {\r\n          index    : 0,\r\n          title    : 'New Message',\r\n          msg      : 'Are your going to meet me tonight?',\r\n          icon     : 'MessageSquareIcon',\r\n          time     : this.randomDate({sec: 10}),\r\n          category : 'primary'\r\n        },\r\n        { index    : 1,\r\n          title    : 'New Order Recieved',\r\n          msg      : 'You got new order of goods.',\r\n          icon     : 'PackageIcon',\r\n          time     : this.randomDate({sec: 40}),\r\n          category : 'success'\r\n        },\r\n        { index    : 2,\r\n          title    : 'Server Limit Reached!',\r\n          msg      : 'Server have 99% CPU usage.',\r\n          icon     : 'AlertOctagonIcon',\r\n          time     : this.randomDate({min: 1}),\r\n          category : 'danger'\r\n        },\r\n        { index    : 3,\r\n          title    : 'New Mail From Peter',\r\n          msg      : 'Cake sesame snaps cupcake',\r\n          icon     : 'MailIcon',\r\n          time     : this.randomDate({min: 6}),\r\n          category : 'primary'\r\n        },\r\n        { index    : 4,\r\n          title    : 'Bruce\\'s Party',\r\n          msg      : 'Chocolate cake oat cake tiramisu',\r\n          icon     : 'CalendarIcon',\r\n          time     : this.randomDate({hr: 2}),\r\n          category : 'warning'\r\n        }\r\n      ],\r\n      settings: {\r\n        maxScrollbarLength: 60,\r\n        wheelSpeed: .60\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    scrollbarTag () { return this.$store.getters.scrollbarTag }\r\n  },\r\n  methods: {\r\n    elapsedTime (startTime) {\r\n      const x        = new Date(startTime)\r\n      const now      = new Date()\r\n      let timeDiff = now - x\r\n      timeDiff    /= 1000\r\n\r\n      const seconds = Math.round(timeDiff)\r\n      timeDiff    = Math.floor(timeDiff / 60)\r\n\r\n      const minutes = Math.round(timeDiff % 60)\r\n      timeDiff    = Math.floor(timeDiff / 60)\r\n\r\n      const hours   = Math.round(timeDiff % 24)\r\n      timeDiff    = Math.floor(timeDiff / 24)\r\n\r\n      const days    = Math.round(timeDiff % 365)\r\n      timeDiff    = Math.floor(timeDiff / 365)\r\n\r\n      const years   = timeDiff\r\n\r\n      if (years > 0) {\r\n        return `${years + (years > 1 ? ' Years ' : ' Year ')}ago`\r\n      } else if (days > 0) {\r\n        return `${days + (days > 1 ? ' Days ' : ' Day ')}ago`\r\n      } else if (hours > 0) {\r\n        return `${hours + (hours > 1 ? ' Hrs ' : ' Hour ')}ago`\r\n      } else if (minutes > 0) {\r\n        return `${minutes + (minutes > 1 ? ' Mins ' : ' Min ')}ago`\r\n      } else if (seconds > 0) {\r\n        return seconds + (seconds > 1 ? ' sec ago' : 'just now')\r\n      }\r\n\r\n      return 'Just Now'\r\n    },\r\n    // Method for creating dummy notification time\r\n    randomDate ({ hr, min, sec }) {\r\n      const date = new Date()\r\n\r\n      if (hr) date.setHours(date.getHours() - hr)\r\n      if (min) date.setMinutes(date.getMinutes() - min)\r\n      if (sec) date.setSeconds(date.getSeconds() - sec)\r\n\r\n      return date\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n"]}]}