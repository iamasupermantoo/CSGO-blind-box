{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\manghefront\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\验收文件0516\\manghefront\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\验收文件0516\\manghefront\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\验收文件0516\\manghefront\\src\\components\\LuckyRoom.vue?vue&type=template&id=9697ab3a&scoped=true&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\manghefront\\src\\components\\LuckyRoom.vue","mtime":1640574659000},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\manghefront\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\manghefront\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\manghefront\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\验收文件0516\\manghefront\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}