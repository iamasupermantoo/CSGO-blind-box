{"remainingRequest":"D:\\BaiduNetdiskDownload\\仿csgo盲盒游戏开箱\\前端文件修复版\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\BaiduNetdiskDownload\\仿csgo盲盒游戏开箱\\前端文件修复版\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\BaiduNetdiskDownload\\仿csgo盲盒游戏开箱\\前端文件修复版\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\BaiduNetdiskDownload\\仿csgo盲盒游戏开箱\\前端文件修复版\\src\\components\\Openbox.vue?vue&type=template&id=2b38e4c1&scoped=true&","dependencies":[{"path":"D:\\BaiduNetdiskDownload\\仿csgo盲盒游戏开箱\\前端文件修复版\\src\\components\\Openbox.vue","mtime":1652600929293},{"path":"D:\\BaiduNetdiskDownload\\仿csgo盲盒游戏开箱\\前端文件修复版\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\BaiduNetdiskDownload\\仿csgo盲盒游戏开箱\\前端文件修复版\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\BaiduNetdiskDownload\\仿csgo盲盒游戏开箱\\前端文件修复版\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\BaiduNetdiskDownload\\仿csgo盲盒游戏开箱\\前端文件修复版\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}